#' Assign Significance Codes Based on P-Values
#'
#' This function assigns significance codes to a p-value column in a data frame
#' based on commonly accepted significance thresholds. It also provides an
#' option to display a message about p-value interpretation when requested.
#'
#' The significance codes are assigned as follows:
#' - `"***"` for p-values ≤ 0.001
#' - `"**"` for p-values ≤ 0.01 and > 0.001
#' - `"*"` for p-values ≤ 0.05 and > 0.01
#' - `"."` for p-values ≤ 0.1 and > 0.05
#' - `"<>"` for p-values > 0.1
#'
#' Additionally, a message explaining the significance of p-values and their
#' interpretation can be displayed if the `p_message` argument is set to `TRUE`.
#'
#' @param data A data frame containing the p-value column to be assessed for
#'   significance.
#' @param p_val_col A numeric column name (or unquoted variable name)
#'   representing the p-values to be categorized. The column should be numeric
#'   and contain p-values between 0 and 1.
#'
#' @returns A data frame with an additional column `significance_value`
#'   containing the assigned significance codes for each p-value.
#'
#' @export
#'
#' @examples
#' # Example usage of the stat_sig function
#' data <- data.frame(p_value = c(0.001, 0.03, 0.12, 0.05, 0.07))
#' stat_sig(data, p_val_col = p_value)
#'
stat_sig <- function(data, p_val_col) {

  model_out <- data |>
    dplyr::mutate(significance_value = ifelse({{p_val_col}} <= 0.05 & {{p_val_col}} > 0.01, "*",
                                              ifelse({{p_val_col}} <= 0.01 & {{p_val_col}} > 0.001, "**",
                                                     ifelse({{p_val_col}} <= 0.001, "***",
                                                            ifelse({{p_val_col}} <= 0.1 & {{p_val_col}} > 0.05, ".", "<>")
                                                     )
                                              )
    )
    )

  return(model_out)

}
