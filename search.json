[{"path":"https://bemts-hhs.github.io/traumar/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 traumar authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://bemts-hhs.github.io/traumar/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nicolas Foss. Author, maintainer. Iowa Department Health Human Services. Copyright holder.","code":""},{"path":"https://bemts-hhs.github.io/traumar/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Foss N (2025). traumar: Calculate Metrics Trauma System Performance. R package version 1.0.0.9000, https://github.com/bemts-hhs/traumar, https://bemts-hhs.github.io/traumar/.","code":"@Manual{,   title = {traumar: Calculate Metrics for Trauma System Performance},   author = {Nicolas Foss},   year = {2025},   note = {R package version 1.0.0.9000, https://github.com/bemts-hhs/traumar},   url = {https://bemts-hhs.github.io/traumar/}, }"},{"path":"https://bemts-hhs.github.io/traumar/index.html","id":"traumar-","dir":"","previous_headings":"","what":"Calculate Metrics for Trauma System Performance","title":"Calculate Metrics for Trauma System Performance","text":"Continuous Quality Improvement (CQI) Process Improvement (PI) essential pillars healthcare, particularly care injured patients. However, hospitals, trauma systems, trauma program managers (TPMs) often lack access standardized quality measures derived academic literature. {traumar} package addresses gap providing tools calculate quality measures related relative mortality efficiently accurately. automating calculations, {traumar} empowers hospital systems, trauma networks, TPMs focus efforts analyzing outcomes driving meaningful improvements patient care. Whether ’re seeking enhance PI initiatives streamline CQI processes, {traumar} serves valuable resource advancing trauma care quality.","code":""},{"path":"https://bemts-hhs.github.io/traumar/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Calculate Metrics for Trauma System Performance","text":"can install development version traumar GitHub :","code":"# install.packages(\"pak\") pak::pak(\"bemts-hhs/traumar\")"},{"path":"https://bemts-hhs.github.io/traumar/index.html","id":"helper-functions","dir":"","previous_headings":"","what":"Helper Functions","title":"Calculate Metrics for Trauma System Performance","text":"{traumar} many functions help data analysis journey! particular, presently access probability survival data, {traumar} provides probability_of_survival() function just using TRISS method. Check additional package documentation https://bemts-hhs.github.io/traumar/ can find examples function package offer.","code":""},{"path":"https://bemts-hhs.github.io/traumar/index.html","id":"calculating-the-w-score","dir":"","previous_headings":"","what":"Calculating the W-Score","title":"Calculate Metrics for Trauma System Performance","text":"W-Score tells us many survivals (deaths) average every 100 cases seen trauma center. Using R, can {traumar} package.","code":""},{"path":"https://bemts-hhs.github.io/traumar/index.html","id":"first-we-will-create-the-data-for-these-examples","dir":"","previous_headings":"Calculating the W-Score","what":"First, we will create the data for these examples","title":"Calculate Metrics for Trauma System Performance","text":"","code":"# Generate example data with high negative skewness set.seed(123)  # Parameters n_patients <- 10000  # Total number of patients  # Generate survival probabilities (Ps) using a logistic distribution Ps <- plogis(rnorm(n_patients, mean = 2, sd = 1.5))  # Skewed towards higher values  # Simulate survival outcomes based on Ps survival_outcomes <- rbinom(n_patients, size = 1, prob = Ps)  # Create data frame data <- data.frame(Ps = Ps, survival = survival_outcomes) |> dplyr::mutate(death = dplyr::if_else(survival == 1, 0, 1))"},{"path":"https://bemts-hhs.github.io/traumar/index.html","id":"the-w-score","dir":"","previous_headings":"Calculating the W-Score","what":"The W-Score!","title":"Calculate Metrics for Trauma System Performance","text":"","code":"# Calculate trauma performance (W, M, Z scores) trauma_performance(data, Ps_col = Ps, outcome_col = death) #> # A tibble: 9 × 2 #>   Calculation_Name        Value #>   <chr>                   <dbl> #> 1 N_Patients          10000     #> 2 N_Survivors          8137     #> 3 N_Deaths             1863     #> 4 Predicted_Survivors  8097.    #> 5 Predicted_Deaths     1903.    #> 6 Patient_Estimate       40.3   #> 7 W_Score                 0.403 #> 8 M_Score                 0.374 #> 9 Z_Score                 1.18"},{"path":"https://bemts-hhs.github.io/traumar/index.html","id":"comparing-the-probability-of-survival-distribution-of-your-patient-mix-to-the-major-trauma-outcomes-study","dir":"","previous_headings":"","what":"Comparing the Probability of Survival Distribution of your Patient Mix to the Major Trauma Outcomes Study","title":"Calculate Metrics for Trauma System Performance","text":"M Z scores calculated using methods defined literature may meaningful distribution probability survival measure similar enough Major Trauma Outcomes Study distribution. {traumar} provides way check data analysis script, even console. trauma_performance() function hood , can get read much confidence can put Z score.","code":"# Compare the current case mix with the MTOS case mix trauma_case_mix(data, Ps_col = Ps, outcome_col = death) #>      Ps_range current_fraction MTOS_distribution #> 1 0.00 - 0.25           0.0209             0.010 #> 2 0.26 - 0.50           0.0742             0.043 #> 3 0.51 - 0.75           0.1907             0.000 #> 4 0.76 - 0.90           0.3000             0.052 #> 5 0.91 - 0.95           0.1979             0.053 #> 6 0.96 - 1.00           0.2163             0.842"},{"path":"https://bemts-hhs.github.io/traumar/index.html","id":"the-relative-mortality-metric","dir":"","previous_headings":"","what":"The Relative Mortality Metric","title":"Calculate Metrics for Trauma System Performance","text":"Napoli et al.(2017) published methods calculating measure trauma center (system) performance overcoming problem W-Score TRISS methodology. Given majority patients seen trauma centers probability survival 90%, estimating performance based W-Score may indicate well center performed lower acuity patients. Using Napoli et al. (2017), possible calculate score similar W-Score interpretability, deals negatively skewed probability survival problem creating non-linear bins score ranges, weighting score based nature bins. Relative Mortality Metric (RMM) scale -1 1, RMM 0 indicates observed mortality aligns expected national benchmark across acuity levels. RMM greater 0 indicates better--expected performance, center outperforming national benchmark. RMM less 0 indicates -performance, center’s observed mortality higher expected benchmark.","code":""},{"path":"https://bemts-hhs.github.io/traumar/index.html","id":"non-linear-binning-algorithm","dir":"","previous_headings":"","what":"Non-Linear Binning Algorithm","title":"Calculate Metrics for Trauma System Performance","text":"important part approach Napoli et al. (2017) took modify M-Score approach looking linear bins probability survival distribution, make non-linear. {traumar} package using Dr. Napoli’s method:","code":"# Apply the nonlinear_bins function results <- nonlinear_bins(data = data,                          Ps_col = Ps,                          outcome_col = survival,                          divisor1 = 4,                          divisor2 = 4,                          threshold_1 = 0.9,                          threshold_2 = 0.99)  # View intervals created by the algorithm results$intervals #>  [1] 0.02257717 0.59018811 0.75332640 0.84397730 0.90005763 0.93040607 #>  [7] 0.95446838 0.97345230 0.99000626 0.99957866  # View the bin statistics results$bin_stats #> # A tibble: 9 × 13 #>   bin_number bin_start bin_end  mean      sd Pred_Survivors_b Pred_Deaths_b #>        <int>     <dbl>   <dbl> <dbl>   <dbl>            <dbl>         <dbl> #> 1          1    0.0226   0.590 0.416 0.133               577.        812.   #> 2          2    0.590    0.753 0.681 0.0480              946.        443.   #> 3          3    0.753    0.844 0.803 0.0261             1116.        273.   #> 4          4    0.844    0.900 0.873 0.0162             1211.        176.   #> 5          5    0.900    0.930 0.916 0.00879             921.         84.5  #> 6          6    0.930    0.954 0.943 0.00699             949.         57.3  #> 7          7    0.954    0.973 0.964 0.00545             970.         36.0  #> 8          8    0.973    0.990 0.981 0.00485             987.         18.7  #> 9          9    0.990    1.00  0.994 0.00253             419.          2.61 #> # ℹ 6 more variables: AntiS_b <dbl>, AntiM_b <dbl>, alive <dbl>, dead <dbl>, #> #   count <dbl>, percent <dbl>"},{"path":"https://bemts-hhs.github.io/traumar/index.html","id":"the-rmm-function","dir":"","previous_headings":"","what":"The RMM function","title":"Calculate Metrics for Trauma System Performance","text":"RMM sensitive higher acuity patients, meaning trauma center struggles patients, reflected RMM. contrast, W-Score may mask declines performance due influence lower acuity patients via MTOS Distribution. {traumar} package automates RMM calculation single score using nonlinear binning method Napoli et al. (2017). rmm() rm_bin_summary() functions internally call nonlinear_bins() generate non-linear binning process. function uses bootstrap process n_samples repetitions simulate RMM distribution estimate 95% confidence intervals. RMM, along corresponding confidence intervals, provided population data, well.","code":"# Example usage of the `rmm()` function rmm(data = data,     Ps_col = Ps,     outcome_col = survival,     n_samples = 250,     Divisor1 = 4,     Divisor2 = 4     ) #> # A tibble: 1 × 8 #>   population_RMM_LL population_RMM population_RMM_UL population_CI #>               <dbl>          <dbl>             <dbl>         <dbl> #> 1           -0.0280         0.0365             0.101        0.0645 #> # ℹ 4 more variables: bootstrap_RMM_LL <dbl>, bootstrap_RMM <dbl>, #> #   bootstrap_RMM_UL <dbl>, bootstrap_CI <dbl>  # Pivoting can be helpful at times rmm(   data = data,   Ps_col = Ps,   outcome_col = survival,   n_samples = 250,   Divisor1 = 4,   Divisor2 = 4,   pivot = TRUE ) #> # A tibble: 8 × 2 #>   stat                 value #>   <chr>                <dbl> #> 1 population_RMM_LL -0.0280  #> 2 population_RMM     0.0365  #> 3 population_RMM_UL  0.101   #> 4 population_CI      0.0645  #> 5 bootstrap_RMM_LL   0.0329  #> 6 bootstrap_RMM      0.0353  #> 7 bootstrap_RMM_UL   0.0378  #> 8 bootstrap_CI       0.00244  # RMM calculated by non-linear bin range # `rm_bin_summary()` function rm_bin_summary(data = data,                Ps_col = Ps,                outcome_col = survival,                Divisor1 = 4,                Divisor2 = 4,                n_samples = 250                ) #> # A tibble: 9 × 19 #>   bin_number  TA_b  TD_b   N_b    EM_b AntiS_b AntiM_b bin_start bin_end #>        <int> <dbl> <dbl> <dbl>   <dbl>   <dbl>   <dbl>     <dbl>   <dbl> #> 1          1   614   775  1389 0.558     0.416   0.584    0.0226   0.590 #> 2          2   953   436  1389 0.314     0.681   0.319    0.590    0.753 #> 3          3  1108   281  1389 0.202     0.803   0.197    0.753    0.844 #> 4          4  1208   179  1387 0.129     0.873   0.127    0.844    0.900 #> 5          5   911    95  1006 0.0944    0.916   0.084    0.900    0.930 #> 6          6   954    52  1006 0.0517    0.943   0.057    0.930    0.954 #> 7          7   979    27  1006 0.0268    0.964   0.036    0.954    0.973 #> 8          8   989    17  1006 0.0169    0.981   0.019    0.973    0.990 #> 9          9   421     1   422 0.00237   0.994   0.006    0.990    1.00  #> # ℹ 10 more variables: midpoint <dbl>, R_b <dbl>, population_RMM_LL <dbl>, #> #   population_RMM <dbl>, population_RMM_UL <dbl>, population_CI <dbl>, #> #   bootstrap_RMM_LL <dbl>, bootstrap_RMM <dbl>, bootstrap_RMM_UL <dbl>, #> #   bootstrap_CI <dbl>"},{"path":"https://bemts-hhs.github.io/traumar/reference/grapes-not_in-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if Elements Are Not in a Vector — %not_in%","title":"Check if Elements Are Not in a Vector — %not_in%","text":"function returns logical vector indicating whether element x y.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/grapes-not_in-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if Elements Are Not in a Vector — %not_in%","text":"","code":"x %not_in% y"},{"path":"https://bemts-hhs.github.io/traumar/reference/grapes-not_in-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if Elements Are Not in a Vector — %not_in%","text":"x vector values checked. y vector values check .","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/grapes-not_in-grapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if Elements Are Not in a Vector — %not_in%","text":"logical vector length x, TRUE indicates corresponding element x found y, FALSE indicates found y.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/grapes-not_in-grapes.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check if Elements Are Not in a Vector — %not_in%","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/grapes-not_in-grapes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if Elements Are Not in a Vector — %not_in%","text":"","code":"# Example vectors x <- c(\"apple\", \"banana\", \"cherry\") y <- c(\"banana\", \"grape\")  # Check which elements in `x` are not in `y` x %not_in% y #> [1]  TRUE FALSE  TRUE  # Example with numeric values a <- c(1, 2, 3, 4, 5) b <- c(2, 4, 6)  a %not_in% b #> [1]  TRUE FALSE  TRUE FALSE  TRUE"},{"path":"https://bemts-hhs.github.io/traumar/reference/impute.html","id":null,"dir":"Reference","previous_headings":"","what":"Impute Numeric Column Values — impute","title":"Impute Numeric Column Values — impute","text":"Cleans numeric columns handling extreme values imputing missing values. function supports two main focuses: handling skewed distributions imputing missing data.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/impute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Impute Numeric Column Values — impute","text":"","code":"impute(   x,   focus = c(\"skew\", \"missing\"),   method = c(\"winsorize\", \"iqr\", \"mean\", \"median\"),   percentile = NULL )"},{"path":"https://bemts-hhs.github.io/traumar/reference/impute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Impute Numeric Column Values — impute","text":"x numeric vector cleaned. focus character string indicating focus. Options : \"skew\": Handle extreme values using percentile IQR methods (default). \"missing\": Impute missing values. method character string specifying method: focus = \"skew\": \"winsorize\": Replace values outside specified percentiles (default). \"iqr\": Use IQR limit extreme values. focus = \"missing\": \"mean\": Replace missing values mean. \"median\": Replace missing values median. percentile numeric value (percentile > 0) winsorization. provided, defaults 0.01 0.99.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/impute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Impute Numeric Column Values — impute","text":"numeric vector cleaned imputed values.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/impute.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Impute Numeric Column Values — impute","text":"","code":"x <- c(1, 2, 3, 100, 200, NA) # Winsorize to 1% and 99% impute(x, focus = \"skew\", method = \"winsorize\") #> [1]   1.04   2.00   3.00 100.00 196.00     NA  # Replace missing values with the mean impute(x, focus = \"missing\", method = \"mean\") #> [1]   1.0   2.0   3.0 100.0 200.0  61.2"},{"path":"https://bemts-hhs.github.io/traumar/reference/nonlinear_bins.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Nonlinear Probability of Survival Bins — nonlinear_bins","title":"Create Nonlinear Probability of Survival Bins — nonlinear_bins","text":"function generates nonlinear bins probability survival data based specified thresholds divisors specified Napoli et al. (2017), Schroeder et al. (2019), Kassar et al. (2016). function calculates bin statistics, including mean, standard deviation, total alive, total dead, count, percentage bin.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/nonlinear_bins.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Nonlinear Probability of Survival Bins — nonlinear_bins","text":"","code":"nonlinear_bins(   data,   Ps_col,   outcome_col,   divisor1 = 5,   divisor2 = 5,   threshold_1 = 0.9,   threshold_2 = 0.99 )"},{"path":"https://bemts-hhs.github.io/traumar/reference/nonlinear_bins.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Nonlinear Probability of Survival Bins — nonlinear_bins","text":"data data.frame tibble containing probability survival data set patients. Ps_col column data containing probability survival values set patients. outcome_col name column containing outcome data. binary, values indicating patient survival. value 1 represent \"alive\" (survived), 0 represent \"dead\" (survive). Ensure column contains two possible values. divisor1 parameter control width probability survival range bins. Affects creation step sizes beginning bin range. Defaults 5. divisor2 parameter control width probability survival range bins. Affects creation step sizes beginning bin range. Defaults 5. threshold_1 parameter decide data indices begin create step sizes. Defaults 0.9. threshold_2 parameter decide data indices end create step sizes. Defaults 0.99.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/nonlinear_bins.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Nonlinear Probability of Survival Bins — nonlinear_bins","text":"list intervals bin_stats objects: intervals: vector start end-points probability survival bin ranges. bin_stats: tibble columns bin_number, bin_start, bin_end, mean, sd, alive, dead, count, percent.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/nonlinear_bins.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create Nonlinear Probability of Survival Bins — nonlinear_bins","text":"Nicolas Foss, Ed.D, MS, original paper code MATLAB Nicholas J. Napoli, Ph.D., MS","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/nonlinear_bins.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Nonlinear Probability of Survival Bins — nonlinear_bins","text":"","code":"# Generate example data with high negative skewness set.seed(123)  # Parameters n_patients <- 10000  # Total number of patients  # Skewed towards higher values Ps <- plogis(rnorm(n_patients, mean = 2, sd = 1.5))  # Simulate survival outcomes based on Ps survival_outcomes <- rbinom(n_patients,                             size = 1,                             prob = Ps                             )  # Create data frame data <- data.frame(Ps = Ps, survival = survival_outcomes) |> dplyr::mutate(death = dplyr::if_else(survival == 1, 0, 1))  # Apply the nonlinear_bins function results <- nonlinear_bins(data = data,                           Ps_col = Ps,                           outcome_col = survival,                           divisor1 = 5,                           divisor2 = 5,                           threshold_1 = 0.9,                           threshold_2 = 0.99)  # View results results$intervals #>  [1] 0.02257717 0.54234698 0.70154257 0.79581165 0.85714527 0.90005763 #>  [7] 0.92518915 0.94603830 0.96266743 0.97623957 0.99957866 results$bin_stats #> # A tibble: 10 × 13 #>    bin_number bin_start bin_end  mean      sd Pred_Survivors_b Pred_Deaths_b #>         <int>     <dbl>   <dbl> <dbl>   <dbl>            <dbl>         <dbl> #>  1          1    0.0226   0.542 0.378 0.122               419.         692.  #>  2          2    0.542    0.702 0.628 0.0458              698.         413.  #>  3          3    0.702    0.796 0.752 0.0271              836.         275.  #>  4          4    0.796    0.857 0.829 0.0173              921.         190.  #>  5          5    0.857    0.900 0.879 0.0126              976.         134.  #>  6          6    0.900    0.925 0.913 0.00723             735.          70.0 #>  7          7    0.925    0.946 0.936 0.00596             753.          51.8 #>  8          8    0.946    0.963 0.954 0.00473             768.          36.7 #>  9          9    0.963    0.976 0.970 0.00406             781.          24.4 #> 10         10    0.976    1.00  0.987 0.00621            1210.          16.2 #> # ℹ 6 more variables: AntiS_b <dbl>, AntiM_b <dbl>, alive <dbl>, dead <dbl>, #> #   count <dbl>, percent <dbl>"},{"path":"https://bemts-hhs.github.io/traumar/reference/normalize.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize a Numeric Vector — normalize","title":"Normalize a Numeric Vector — normalize","text":"function normalizes numeric integer vector using one two methods: min-max normalization (scales data range (0, 1)) z-score normalization (centers data around 0 standard deviation 1).","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/normalize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize a Numeric Vector — normalize","text":"","code":"normalize(x, method = c(\"min_max\", \"z_score\"))"},{"path":"https://bemts-hhs.github.io/traumar/reference/normalize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize a Numeric Vector — normalize","text":"x numeric integer vector normalized. method character string specifying normalization method. Options \"min_max\" min-max normalization \"z_score\" z-score normalization. method provided, default \"min_max\".","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/normalize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize a Numeric Vector — normalize","text":"numeric vector length x, containing normalized values.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/normalize.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Normalize a Numeric Vector — normalize","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/normalize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normalize a Numeric Vector — normalize","text":"","code":"# Example data data <- c(10, 20, 30, 40, 50, NA)  # Min-max normalization normalize(data, method = \"min_max\") #> [1] 0.00 0.25 0.50 0.75 1.00   NA  # Z-score normalization normalize(data, method = \"z_score\") #> [1] -1.2649111 -0.6324555  0.0000000  0.6324555  1.2649111         NA  # Default behavior (min-max normalization) normalize(data) #> ℹ As no method was supplied, `normalize()` will default to min-max normalization methods. #> [1] 0.00 0.25 0.50 0.75 1.00   NA"},{"path":"https://bemts-hhs.github.io/traumar/reference/pretty_number.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Numbers into Readable Abbreviated Formats — pretty_number","title":"Convert Numbers into Readable Abbreviated Formats — pretty_number","text":"function converts large numeric values readable abbreviated formats (e.g., 1,000 becomes \"1k\") options rounding, decimal precision, custom prefix. supports numbers decillion range.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/pretty_number.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Numbers into Readable Abbreviated Formats — pretty_number","text":"","code":"pretty_number(x, n_decimal = 2, prefix = NULL, truncate = FALSE)"},{"path":"https://bemts-hhs.github.io/traumar/reference/pretty_number.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Numbers into Readable Abbreviated Formats — pretty_number","text":"x numeric value vector converted readable format. n_decimal integer specifying number decimal places include output. Defaults 2. prefix optional character string prepend formatted number (e.g., \"$\"). Defaults NULL. truncate logical value indicating whether truncate numbers formatting. Defaults FALSE.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/pretty_number.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Numbers into Readable Abbreviated Formats — pretty_number","text":"character vector numbers formatted abbreviated strings. prefix provided, prepends formatted numbers.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/pretty_number.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert Numbers into Readable Abbreviated Formats — pretty_number","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/pretty_number.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Numbers into Readable Abbreviated Formats — pretty_number","text":"","code":"# Basic usage pretty_number(1234)               # \"1.23k\" #> [1] \"1.23k\" pretty_number(1234567)            # \"1.23m\" #> [1] \"1.23m\" pretty_number(1234567890)         # \"1.23b\" #> [1] \"1.23b\"  # Adjusting decimal places pretty_number(1234, n_decimal = 1) # \"1.2k\" #> [1] \"1.2k\"  # Adding a prefix pretty_number(1234, prefix = \"$\")  # \"$1.23k\" #> [1] \"$1.23k\"  # Without rounding pretty_number(1250, truncate = TRUE) # \"1.2k\" #> [1] \"1.2k\""},{"path":"https://bemts-hhs.github.io/traumar/reference/pretty_percent.html","id":null,"dir":"Reference","previous_headings":"","what":"Format Numeric Variables as Percentages — pretty_percent","title":"Format Numeric Variables as Percentages — pretty_percent","text":"function formats numeric variables percentages specified number decimal places. refines output removing unnecessary trailing zeros decimal point ensures percentage sign correctly applied without extraneous characters, resulting polished, human-readable percentage representation.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/pretty_percent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format Numeric Variables as Percentages — pretty_percent","text":"","code":"pretty_percent(variable, n_decimal = 1)"},{"path":"https://bemts-hhs.github.io/traumar/reference/pretty_percent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format Numeric Variables as Percentages — pretty_percent","text":"variable numeric vector representing proportions format percentages. values scale 0 1. n_decimal numeric value specifying number decimal places. Defaults 1.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/pretty_percent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format Numeric Variables as Percentages — pretty_percent","text":"character vector containing formatted percentages.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/pretty_percent.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Format Numeric Variables as Percentages — pretty_percent","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/pretty_percent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format Numeric Variables as Percentages — pretty_percent","text":"","code":"# Example usage: pretty_percent(0.12345)  # Default decimal places #> [1] \"12.3%\" pretty_percent(0.12345, n_decimal = 2)  # Two decimal places #> [1] \"12.35%\" pretty_percent(c(0.1, 0.25, 0.3333), n_decimal = 1)  # Vector input #> [1] \"10%\"   \"25%\"   \"33.3%\""},{"path":"https://bemts-hhs.github.io/traumar/reference/probability_of_survival.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Probability of Survival Using TRISS Method — probability_of_survival","title":"Calculate Probability of Survival Using TRISS Method — probability_of_survival","text":"function calculates probability survival (Ps) trauma patients based Trauma Injury Severity Score (TRISS) methodology. TRISS combines physiological anatomical data predict survival likelihood using logistic regression model. function incorporates trauma type, patient age, Revised Trauma Score (RTS), Injury Severity Score (ISS) calculation. Probability survival expressed percentage.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/probability_of_survival.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Probability of Survival Using TRISS Method — probability_of_survival","text":"","code":"probability_of_survival(trauma_type, age, rts, iss)"},{"path":"https://bemts-hhs.github.io/traumar/reference/probability_of_survival.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Probability of Survival Using TRISS Method — probability_of_survival","text":"trauma_type Character vector indicating type trauma (\"Blunt\" \"Penetrating\"). Different methods exist calculating probability survival burn patients, records excluded . age Numeric vector indicating patient's age years. rts Numeric vector indicating patient's Revised Trauma Score (RTS). iss Numeric vector indicating patient's Injury Severity Score (ISS).","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/probability_of_survival.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Probability of Survival Using TRISS Method — probability_of_survival","text":"Numeric vector probabilities survival (Ps) expressed percentages scale 0 1.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/probability_of_survival.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate Probability of Survival Using TRISS Method — probability_of_survival","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/probability_of_survival.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Probability of Survival Using TRISS Method — probability_of_survival","text":"","code":"# Example usage: trauma_data <- data.frame(   Trauma_Type = c(\"Blunt\", \"Penetrating\"),   Patient_Age_Years = c(30, 60),   RTS = c(7.84, 6.90),   ISS = c(10, 25) )  result <- trauma_data |>   dplyr::mutate(Ps = probability_of_survival(     trauma_type = Trauma_Type,     age = Patient_Age_Years,     rts = RTS,     iss = ISS   ))"},{"path":"https://bemts-hhs.github.io/traumar/reference/rm_bin_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Bin-Level Summary for Relative Mortality Metric (RMM) — rm_bin_summary","title":"Bin-Level Summary for Relative Mortality Metric (RMM) — rm_bin_summary","text":"Calculates bin-level summary Relative Mortality Metric (RMM) Napoli et al. (2017) grouping data bins based survival probabilities (Ps) summarizing outcomes within bin. function returns statistics total alive, total dead, estimated mortality, anticipated mortality, confidence intervals bin. information methods used function, see well Schroeder et al. (2019), Kassar et al. (2016). Relative Mortality Metric (RMM) quantifies performance center comparison anticipated mortality based TRISS national benchmark. RMM measures difference observed expected mortality, range -1 1. RMM 0 indicates observed mortality aligns expected national benchmark across acuity levels. RMM greater 0 indicates better--expected performance, center outperforming national benchmark. RMM less 0 indicates -performance, center’s observed mortality higher expected benchmark. metric helps assess center's mortality compares national standards, guiding quality improvement efforts.rm_bin_summary() utilizes bootstrap sampling calculate confidence intervals via standard error method. Due use bootstrap sampling within function, users set random number seed running rm_bin_summary().","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/rm_bin_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bin-Level Summary for Relative Mortality Metric (RMM) — rm_bin_summary","text":"","code":"rm_bin_summary(   data,   Ps_col,   outcome_col,   n_samples = 1000,   Divisor1 = 5,   Divisor2 = 5,   Threshold_1 = 0.9,   Threshold_2 = 0.99 )"},{"path":"https://bemts-hhs.github.io/traumar/reference/rm_bin_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bin-Level Summary for Relative Mortality Metric (RMM) — rm_bin_summary","text":"data data frame tibble containing data. Ps_col name column containing survival probabilities (Ps). numeric (values 0 100). outcome_col name column containing outcome data. binary, values indicating patient survival. value 1 represent \"alive\" (survived), 0 represent \"dead\" (survive). Ensure column contains two possible values. n_samples numeric value indicating number bootstrap samples take data source. Divisor1 divisor used binning survival probabilities (default 5). Divisor2 second divisor used binning survival probabilities (default 5). Threshold_1 first threshold dividing survival probabilities (default 0.9). Threshold_2 second threshold dividing survival probabilities (default 0.99).","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/rm_bin_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bin-Level Summary for Relative Mortality Metric (RMM) — rm_bin_summary","text":"tibble containing bin-level statistics including: bin_number: bin record assigned. TA_b: Total alive bin (number patients survived). TD_b: Total dead bin (number patients survive). N_b: Total number patients bin. EM_b: Estimated mortality rate bin (TD_b / (TA_b + TD_b)). AntiS_b: anticipated survival rate bin. AntiM_b: anticipated mortality rate bin. bin_start: lower bound survival probability range bin. bin_end: upper bound survival probability range bin. midpoint: midpoint bin range (calculated (bin_start + bin_end) / 2). R_b: width bin (bin_end - bin_start). population_RMM_LL: lower bound 95% confidence interval population RMM. population_RMM: final calculated Relative Mortality Metric population existing data. population_RMM_UL: upper bound 95% confidence interval population RMM. population_CI: confidence interval width population RMM. bootstrap_RMM_LL: lower bound 95% confidence interval bootstrap RMM. bootstrap_RMM: average RMM value calculated bootstrap sample. bootstrap_RMM_UL: upper bound 95% confidence interval bootstrap RMM. bootstrap_CI: width 95% confidence interval bootstrap RMM.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/rm_bin_summary.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Bin-Level Summary for Relative Mortality Metric (RMM) — rm_bin_summary","text":"Nicolas Foss, Ed.D, MS, original paper code MATLAB Nicholas J. Napoli, Ph.D., MS","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/rm_bin_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bin-Level Summary for Relative Mortality Metric (RMM) — rm_bin_summary","text":"","code":"# Generate example data with high negative skewness set.seed(10232015)  # Parameters n_patients <- 10000  # Total number of patients  Ps <- plogis(rnorm(n_patients, mean = 2,                     sd = 1.5)                     )  # Skewed towards higher values  # Simulate survival outcomes based on Ps survival_outcomes <- rbinom(n_patients,                             size = 1,                             prob = Ps                             )  # Create data frame data <- data.frame(Ps = Ps, survival = survival_outcomes) |> dplyr::mutate(death = dplyr::if_else(survival == 1, 0, 1))  # Example usage of the `rm_bin_summary` function rm_bin_summary(data = data, Ps_col = Ps,                outcome_col = survival,                n_samples = 5                ) #> # A tibble: 10 × 19 #>    bin_number  TA_b  TD_b   N_b    EM_b AntiS_b AntiM_b bin_start bin_end #>         <int> <dbl> <dbl> <dbl>   <dbl>   <dbl>   <dbl>     <dbl>   <dbl> #>  1          1   429   688  1117 0.616     0.379   0.621   0.00814   0.540 #>  2          2   685   432  1117 0.387     0.629   0.371   0.540     0.699 #>  3          3   842   275  1117 0.246     0.753   0.247   0.699     0.797 #>  4          4   910   207  1117 0.185     0.83    0.17    0.797     0.859 #>  5          5   969   145  1114 0.130     0.881   0.119   0.859     0.900 #>  6          6   714    80   794 0.101     0.913   0.087   0.900     0.926 #>  7          7   746    48   794 0.0605    0.937   0.063   0.926     0.947 #>  8          8   767    27   794 0.0340    0.955   0.045   0.947     0.963 #>  9          9   775    19   794 0.0239    0.97    0.03    0.963     0.978 #> 10         10  1232    10  1242 0.00805   0.988   0.012   0.978     1.00  #> # ℹ 10 more variables: midpoint <dbl>, R_b <dbl>, population_RMM_LL <dbl>, #> #   population_RMM <dbl>, population_RMM_UL <dbl>, population_CI <dbl>, #> #   bootstrap_RMM_LL <dbl>, bootstrap_RMM <dbl>, bootstrap_RMM_UL <dbl>, #> #   bootstrap_CI <dbl>"},{"path":"https://bemts-hhs.github.io/traumar/reference/rmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Relative Mortality Metric (RMM) Calculation — rmm","title":"Relative Mortality Metric (RMM) Calculation — rmm","text":"Calculates Relative Mortality Metric (RMM) Napoli et al. (2017) based patient survival probabilities (Ps) actual outcomes. function groups patients bins based survival probability scores (Ps) computes weighted mortality metric along confidence intervals. information methods used function, see well Schroeder et al. (2019), Kassar et al. (2016). Relative Mortality Metric (RMM) quantifies performance center comparison anticipated mortality based TRISS national benchmark. RMM measures difference observed expected mortality, range -1 1. RMM 0 indicates observed mortality aligns expected national benchmark across acuity levels. RMM greater 0 indicates better--expected performance, center outperforming national benchmark. RMM less 0 indicates -performance, center’s observed mortality higher expected benchmark. metric helps assess center's mortality compares national standards, guiding quality improvement efforts.  rmm() utilizes bootstrap sampling calculate confidence intervals via standard error method. Due use bootstrap sampling within function, users set random number seed running rmm().","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/rmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Relative Mortality Metric (RMM) Calculation — rmm","text":"","code":"rmm(   data,   Ps_col,   outcome_col,   n_samples = 1000,   Divisor1 = 5,   Divisor2 = 5,   Threshold_1 = 0.9,   Threshold_2 = 0.99,   pivot = FALSE )"},{"path":"https://bemts-hhs.github.io/traumar/reference/rmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Relative Mortality Metric (RMM) Calculation — rmm","text":"data data frame tibble containing data. Ps_col name column containing survival probabilities (Ps). numeric (values 0 100). outcome_col name column containing outcome data. binary, values indicating patient survival. value 1 represent \"alive\" (survived), 0 represent \"dead\" (survive). Ensure column contains two possible values. n_samples numeric value indicating number bootstrap samples take data source. Divisor1 divisor used binning survival probabilities (default 5). Divisor2 second divisor used binning survival probabilities (default 5). Threshold_1 first threshold dividing survival probabilities (default 0.9). Threshold_2 second threshold dividing survival probabilities (default 0.99). pivot logical indicating whether return results long format (pivot = TRUE) wide format (pivot = FALSE, default).","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/rmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Relative Mortality Metric (RMM) Calculation — rmm","text":"tibble containing Relative Mortality Metric (RMM) related statistics: population_RMM_LL: lower bound 95% confidence interval population RMM. population_RMM: final calculated Relative Mortality Metric population existing data. population_RMM_UL: upper bound 95% confidence interval population RMM. population_CI: confidence interval width population RMM. bootstrap_RMM_LL: lower bound 95% confidence interval bootstrap RMM. bootstrap_RMM: average RMM value calculated bootstrap sample. bootstrap_RMM_UL: upper bound 95% confidence interval bootstrap RMM. bootstrap_CI: width 95% confidence interval bootstrap RMM. pivot = TRUE, results long format two columns: stat value, row corresponds one calculated statistics. pivot = FALSE (default), results returned wide format, statistic separate column.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/rmm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Relative Mortality Metric (RMM) Calculation — rmm","text":"Nicolas Foss, Ed.D, MS, original paper code MATLAB Nicholas J. Napoli, Ph.D., MS","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/rmm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Relative Mortality Metric (RMM) Calculation — rmm","text":"","code":"# Generate example data with high negative skewness set.seed(10232015)  # Parameters n_patients <- 1000  # Total number of patients  # Skewed towards higher values Ps <- plogis(rnorm(n_patients, mean = 2, sd = 1.5))  # Simulate survival outcomes based on Ps survival_outcomes <- rbinom(n_patients,                             size = 1,                             prob = Ps                             )  # Create data frame data <- data.frame(Ps = Ps, survival = survival_outcomes) |> dplyr::mutate(death = dplyr::if_else(survival == 1, 0, 1))  # Example usage of the `rmm` function rmm(data = data, Ps_col = Ps,     outcome_col = survival,     Divisor1 = 5,     Divisor2 = 5,     n_samples = 5     ) #> # A tibble: 1 × 8 #>   population_RMM_LL population_RMM population_RMM_UL population_CI #>               <dbl>          <dbl>             <dbl>         <dbl> #> 1            -0.334        -0.0823             0.170         0.252 #> # ℹ 4 more variables: bootstrap_RMM_LL <dbl>, bootstrap_RMM <dbl>, #> #   bootstrap_RMM_UL <dbl>, bootstrap_CI <dbl>  # pivot! rmm(data = data, Ps_col = Ps,     outcome_col = survival,     Divisor1 = 5,     Divisor2 = 5,     n_samples = 5,     pivot = TRUE     ) #> # A tibble: 8 × 2 #>   stat                value #>   <chr>               <dbl> #> 1 population_RMM_LL -0.334  #> 2 population_RMM    -0.0823 #> 3 population_RMM_UL  0.170  #> 4 population_CI      0.252  #> 5 bootstrap_RMM_LL  -0.155  #> 6 bootstrap_RMM     -0.0866 #> 7 bootstrap_RMM_UL  -0.0185 #> 8 bootstrap_CI       0.0682"},{"path":"https://bemts-hhs.github.io/traumar/reference/season.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Season Based on a Date — season","title":"Get Season Based on a Date — season","text":"function determines season (Winter, Spring, Summer, Fall) based input date.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/season.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Season Based on a Date — season","text":"","code":"season(input_date)"},{"path":"https://bemts-hhs.github.io/traumar/reference/season.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Season Based on a Date — season","text":"input_date Date POSIXct object representing date determine season . input must class Date POSIXct.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/season.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Season Based on a Date — season","text":"factor indicating season corresponding input date. factor levels : \"Winter\" December, January, February. \"Spring\" March, April, May. \"Summer\" June, July, August. \"Fall\" September, October, November. \"Undetermined\" input valid Date POSIXct object month missing.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/season.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Season Based on a Date — season","text":"seasons assigned based geographic regions similar seasons occur United States. seasons determined using month year traditional meteorological definition seasons (Winter: December, January, February; Spring: March, April, May; Summer: June, July, August; Fall: September, October, November).","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/season.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get Season Based on a Date — season","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/season.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Season Based on a Date — season","text":"","code":"# Example usage of the season function season(as.Date(\"2025-01-15\")) #> [1] Winter #> Levels: Winter season(as.POSIXct(\"2025-07-01 12:00:00\")) #> [1] Summer #> Levels: Summer"},{"path":"https://bemts-hhs.github.io/traumar/reference/small_count_label.html","id":null,"dir":"Reference","previous_headings":"","what":"Label Small Counts Based on a Cutoff — small_count_label","title":"Label Small Counts Based on a Cutoff — small_count_label","text":"function labels values vector replacement string smaller specified cutoff. input can numeric, function return either modified version input vector small values replaced given label, keep original values otherwise.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/small_count_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Label Small Counts Based on a Cutoff — small_count_label","text":"","code":"small_count_label(var, cutoff, replacement)"},{"path":"https://bemts-hhs.github.io/traumar/reference/small_count_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Label Small Counts Based on a Cutoff — small_count_label","text":"var numeric vector. represents variable checked cutoff. cutoff numeric value representing threshold. Values var smaller value replaced. replacement string numeric value. value var smaller cutoff, value replace . string provided, replace numeric values string. numeric value provided, replacement also numeric.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/small_count_label.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Label Small Counts Based on a Cutoff — small_count_label","text":"vector values var. Values smaller cutoff replaced replacement. replacement string, return type character, otherwise, remain numeric.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/small_count_label.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Label Small Counts Based on a Cutoff — small_count_label","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/small_count_label.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Label Small Counts Based on a Cutoff — small_count_label","text":"","code":"# Example usage of the small_count_label function small_count_label(c(1, 5, 10), 5, \"Below Cutoff\") #> [1] \"Below Cutoff\" \"5\"            \"10\"           small_count_label(c(1, 5, 10), 5, 0) #> [1]  0  5 10"},{"path":"https://bemts-hhs.github.io/traumar/reference/stat_sig.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign Significance Codes Based on P-Values — stat_sig","title":"Assign Significance Codes Based on P-Values — stat_sig","text":"function assigns significance codes p-value vector based commonly accepted significance thresholds. significance codes : \"***\" p-values <= 0.001 \"**\" p-values <= 0.01 > 0.001 \"*\" p-values <= 0.05 > 0.01 \".\" p-values <= 0.1 > 0.05 \"<>\" p-values > 0.1","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/stat_sig.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign Significance Codes Based on P-Values — stat_sig","text":"","code":"stat_sig(p_val_data)"},{"path":"https://bemts-hhs.github.io/traumar/reference/stat_sig.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign Significance Codes Based on P-Values — stat_sig","text":"p_val_data numeric vector representing p-values categorized. vector contain p-values 0 1.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/stat_sig.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assign Significance Codes Based on P-Values — stat_sig","text":"character vector assigned significance codes p-value.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/stat_sig.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Assign Significance Codes Based on P-Values — stat_sig","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/stat_sig.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assign Significance Codes Based on P-Values — stat_sig","text":"","code":"# Example usage of the stat_sig function data <- data.frame(p_value = c(0.001, 0.03, 0.12, 0.05, 0.07))  data |>   dplyr::mutate(significance = stat_sig(p_val_data = p_value)) #>   p_value significance #> 1   0.001          *** #> 2   0.030            * #> 3   0.120           <> #> 4   0.050            * #> 5   0.070            ."},{"path":"https://bemts-hhs.github.io/traumar/reference/theme_cleaner.html","id":null,"dir":"Reference","previous_headings":"","what":"Customizable Minimalistic ggplot2 Theme — theme_cleaner","title":"Customizable Minimalistic ggplot2 Theme — theme_cleaner","text":"flexible customizable theme function creating polished minimalistic plots using ggplot2. theme_cleaner function provides various options control appearance plot elements, including font styles, sizes, colors, axis lines, grid lines, legend, title, subtitle, captions, facet appearance. theme highly customizable, allowing creation visually appealing clean plots.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/theme_cleaner.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Customizable Minimalistic ggplot2 Theme — theme_cleaner","text":"","code":"theme_cleaner(   base_size = 12,   base_family = \"sans\",   base_color = \"#70C8B8\",   base_color_title = \"#03617A\",   title_text_size = ceiling(base_size * 1.1),   subtitle_text_size = ceiling(base_size * 1.05),   caption_color = \"#19405B\",   legend_position = \"top\",   vjust_title = 0,   vjust_subtitle = 0,   hjust_title = 0,   hjust_subtitle = 0,   axis_lines = FALSE,   facets = FALSE,   facet_text_size = base_size,   draw_panel_border = FALSE,   ... )"},{"path":"https://bemts-hhs.github.io/traumar/reference/theme_cleaner.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Customizable Minimalistic ggplot2 Theme — theme_cleaner","text":"base_size Numeric. Default font size plot elements. Defaults 12. base_family Character. Font family used text plot. Defaults \"Work Sans\". base_color Character. Hex color code primary plot elements (e.g., axis text, legend text). Defaults \"#70C8B8\". base_color_title Character. Hex color code plot title legend title text. Defaults \"#03617A\". title_text_size Numeric. Font size plot title text. Defaults base_size * 1.1. subtitle_text_size Numeric. Font size plot subtitle text. Defaults base_size * 1.05. caption_color Character. Hex color code plot caption text. Defaults \"#19405B\". legend_position Character. Legend position plot. Accepts \"top\", \"bottom\", \"left\", \"right\". Defaults \"top\". vjust_title Numeric. Vertical justification plot title. Defaults 0. vjust_subtitle Numeric. Vertical justification plot subtitle. Defaults 0. hjust_title Numeric. Horizontal justification plot title. Defaults 0. hjust_subtitle Numeric. Horizontal justification plot subtitle. Defaults 0. axis_lines Logical. TRUE, axis lines drawn base_color; otherwise, hidden. Defaults FALSE. facets Logical. TRUE, additional formatting facet plots applied. Defaults FALSE. facet_text_size Numeric. facets = TRUE, size formatting facet text (strip.text) applied. Defaults base_size. draw_panel_border Logical. TRUE, border drawn around panels facet plots. Defaults FALSE. ... Additional arguments passed ggplot2::theme customization.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/theme_cleaner.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Customizable Minimalistic ggplot2 Theme — theme_cleaner","text":"ggplot2 theme object can applied plots.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/theme_cleaner.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Customizable Minimalistic ggplot2 Theme — theme_cleaner","text":"function customizes common plot elements like axis text, titles, subtitles, captions, legend, facet labels. designed work ggplot2 plots, providing clean professional look minimal styling. can adjust various aesthetic features font size, color, legend position maximum control appearance.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/theme_cleaner.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Customizable Minimalistic ggplot2 Theme — theme_cleaner","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/theme_cleaner.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Customizable Minimalistic ggplot2 Theme — theme_cleaner","text":"","code":"# Create a ggplot2 plot with the theme_cleaner theme library(ggplot2) ggplot(mtcars, aes(x = mpg, y = wt)) +   geom_point() +   theme_cleaner(base_size = 14, title_text_size = 16, legend_position = \"bottom\")   # Customize facet plots with theme_cleaner ggplot(mtcars, aes(x = mpg, y = wt)) +   geom_point() +   facet_wrap(~cyl) +   theme_cleaner(facets = TRUE, facet_text_size = 12, draw_panel_border = TRUE)"},{"path":"https://bemts-hhs.github.io/traumar/reference/trauma_case_mix.html","id":null,"dir":"Reference","previous_headings":"","what":"View the Current Patient Population Case Mix Compared to the Major Trauma Study Case Mix — trauma_case_mix","title":"View the Current Patient Population Case Mix Compared to the Major Trauma Study Case Mix — trauma_case_mix","text":"function compares current patient population's case mix (based probability survival, Ps) MTOS case mix binning patients specific Ps ranges. returns fraction patients range compares MTOS distribution. information methods used calculations, please see Flora (1978) Boyd et al. (1987).","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/trauma_case_mix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"View the Current Patient Population Case Mix Compared to the Major Trauma Study Case Mix — trauma_case_mix","text":"","code":"trauma_case_mix(df, Ps_col, outcome_col)"},{"path":"https://bemts-hhs.github.io/traumar/reference/trauma_case_mix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"View the Current Patient Population Case Mix Compared to the Major Trauma Study Case Mix — trauma_case_mix","text":"df data frame containing patient data. Ps_col name column containing probability survival (Ps) values. outcome_col name column containing binary outcome data (valid values 1 TRUE alive, 0 FALSE dead).","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/trauma_case_mix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"View the Current Patient Population Case Mix Compared to the Major Trauma Study Case Mix — trauma_case_mix","text":"data frame containing Ps ranges, fraction patients range current population, MTOS distribution range.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/trauma_case_mix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"View the Current Patient Population Case Mix Compared to the Major Trauma Study Case Mix — trauma_case_mix","text":"function checks whether outcome_col contains exactly two unique values representing binary outcome. also ensures Ps_col contains numeric values within range 0 100. values exceed 1, converted decimal format. patients grouped predefined Ps ranges, function compares fraction patients range MTOS case mix distribution.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/trauma_case_mix.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"View the Current Patient Population Case Mix Compared to the Major Trauma Study Case Mix — trauma_case_mix","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/trauma_case_mix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"View the Current Patient Population Case Mix Compared to the Major Trauma Study Case Mix — trauma_case_mix","text":"","code":"# Generate example data with high negative skewness set.seed(123)  # Parameters n_patients <- 10000  # Total number of patients  # Generate survival probabilities (Ps) using a logistic distribution set.seed(123)  # For reproducibility Ps <- plogis(rnorm(n_patients, mean = 2, sd = 1.5))  # Skewed towards higher values  # Simulate survival outcomes based on Ps survival_outcomes <- rbinom(n_patients, size = 1, prob = Ps)  # Create data frame data <- data.frame(Ps = Ps, survival = survival_outcomes) |> dplyr::mutate(death = dplyr::if_else(survival == 1, 0, 1))  # Compare the current case mix with the MTOS case mix trauma_case_mix(data, Ps_col = Ps, outcome_col = death) #>      Ps_range current_fraction MTOS_distribution #> 1 0.00 - 0.25           0.0209             0.010 #> 2 0.26 - 0.50           0.0742             0.043 #> 3 0.51 - 0.75           0.1907             0.000 #> 4 0.76 - 0.90           0.3000             0.052 #> 5 0.91 - 0.95           0.1979             0.053 #> 6 0.96 - 1.00           0.2163             0.842"},{"path":"https://bemts-hhs.github.io/traumar/reference/trauma_performance.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Trauma Hospital Performance Based on Robust and Validated Measures — trauma_performance","title":"Calculate Trauma Hospital Performance Based on Robust and Validated Measures — trauma_performance","text":"function calculates trauma hospital performance based M, W, Z scores, derived survival probability mortality data, using established methods. computes W-score, M-score, Z-score based provided dataset calculates performance metrics trauma programs. information methods used function, please see Champion et al. (1990) W score, Flora (1978) Boyd et al. (1987) M Z scores.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/trauma_performance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Trauma Hospital Performance Based on Robust and Validated Measures — trauma_performance","text":"","code":"trauma_performance(   df,   Ps_col,   outcome_col,   outcome = 1,   z_method = c(\"survival\", \"mortality\"),   diagnostics = FALSE )"},{"path":"https://bemts-hhs.github.io/traumar/reference/trauma_performance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Trauma Hospital Performance Based on Robust and Validated Measures — trauma_performance","text":"df data frame containing patient data. Ps_col name column containing probability survival (Ps). values numeric 0 1. Values greater 1 automatically converted decimal format dividing 100. outcome_col name column containing binary outcome data. column contain binary values indicating patient outcome. Valid values include 1 (dead) 0 (alive), TRUE (dead) FALSE (alive), similar binary representations (e.g., \"Yes\" dead \"\" alive). function check two unique values column expects represent outcome binary form. outcome value representing mortality (default 1). Can also set 0 TRUE/FALSE, depending outcome encoded outcome_col. z_method character vector indicating method use calculating Z-score. Must one \"survival\" \"mortality\". default \"survival\". diagnostics logical flag (default FALSE). TRUE, diagnostic information W, M, Z scores printed console.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/trauma_performance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Trauma Hospital Performance Based on Robust and Validated Measures — trauma_performance","text":"tibble containing following calculations: N_Patients: total number patients included analysis. N_Survivors: total number patients survived, based provided outcome data. N_Deaths: total number patients died, based provided outcome data. Predicted_Survivors: total predicted number survivors based survival probability (Ps) patients. Predicted_Deaths: total predicted number deaths, calculated 1 - Ps patients. Patient_Estimate: estimated number patients survived, calculated based W-score. value reflects difference actual predicted number survivors. W_Score: W-score, representing difference observed expected number survivors per 100 patients. positive W-score indicates patients survived expected, negative score indicates fewer patients survived expected. M_Score: M-score, compares observed patient case mix Major Trauma Outcomes Study (MTOS) case mix. higher score indicates patient mix similar MTOS, lower score indicates dissimilar mix. Based MTOS literature, M_Score >= 0.88 indicates Z_Score comes distribution similar enough MTOS Ps distribution. Z_Score: Z-score, quantifies difference actual predicted mortality (z_method = \"mortality\") survival (z_method = \"survival\"). Z-score > 1.96 considered point statistical significance W-Score alpha = 0.05 level survival. positive Z_Score indicates patients survived predicted, negative Z-score indicates fewer survivors predicted.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/trauma_performance.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate Trauma Hospital Performance Based on Robust and Validated Measures — trauma_performance","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/trauma_performance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Trauma Hospital Performance Based on Robust and Validated Measures — trauma_performance","text":"","code":"# Generate example data with high negative skewness set.seed(123)  # Parameters n_patients <- 10000  # Total number of patients  # Generate survival probabilities (Ps) using a logistic distribution set.seed(123)  # For reproducibility Ps <- plogis(rnorm(n_patients, mean = 2, sd = 1.5))  # Skewed towards higher values  # Simulate survival outcomes based on Ps survival_outcomes <- rbinom(n_patients, size = 1, prob = Ps)  # Create data frame data <- data.frame(Ps = Ps, survival = survival_outcomes) |> dplyr::mutate(death = dplyr::if_else(survival == 1, 0, 1))  # Calculate trauma performance (W, M, Z scores) trauma_performance(data, Ps_col = Ps, outcome_col = death) #> # A tibble: 9 × 2 #>   Calculation_Name        Value #>   <chr>                   <dbl> #> 1 N_Patients          10000     #> 2 N_Survivors          8137     #> 3 N_Deaths             1863     #> 4 Predicted_Survivors  8097.    #> 5 Predicted_Deaths     1903.    #> 6 Patient_Estimate       40.3   #> 7 W_Score                 0.403 #> 8 M_Score                 0.374 #> 9 Z_Score                 1.18"},{"path":"https://bemts-hhs.github.io/traumar/reference/traumar-package.html","id":null,"dir":"Reference","previous_headings":"","what":"traumar: Calculate Metrics for Trauma System Performance — traumar-package","title":"traumar: Calculate Metrics for Trauma System Performance — traumar-package","text":"Hospitals, hospital systems, even trauma systems provide care injured patients may aware robust metrics can help gauge efficacy programs saving lives injured patients. 'traumar' provides robust functions driven academic literature automate calculation relevant metrics individuals desiring measure performance trauma center even trauma system. 'traumar' also provides helper functions data analysis journey. Users can refer following publications descriptions methods used 'traumar'. TRISS methodology, including probability survival, W, M, Z Scores - Flora (1978) doi:10.1097/00005373-197810000-00003 , Boyd et al. (1987, PMID:3106646), Llullaku et al. (2009) doi:10.1186/1749-7922-4-2 , Singh et al. (2011) doi:10.4103/0974-2700.86626 , Baker et al. (1974, PMID:4814394), Champion et al. (1989) doi:10.1097/00005373-198905000-00017 . Relative Mortality Metric, see Napoli et al. (2017) doi:10.1080/24725579.2017.1325948 , Schroeder et al. (2019) doi:10.1080/10903127.2018.1489021 , Kassar et al. (2016) doi:10.1177/00031348221093563 .","code":""},{"path":[]},{"path":"https://bemts-hhs.github.io/traumar/reference/traumar-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"traumar: Calculate Metrics for Trauma System Performance — traumar-package","text":"Maintainer: Nicolas Foss nicolas.foss@hhs.iowa.gov contributors: Iowa Department Health Human Services [copyright holder]","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/weekend.html","id":null,"dir":"Reference","previous_headings":"","what":"Classify Dates as Weekday or Weekend — weekend","title":"Classify Dates as Weekday or Weekend — weekend","text":"function classifies date vector dates either \"Weekday\" \"Weekend\". function returns \"Weekday\" Monday Friday \"Weekend\" Saturday Sunday.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/weekend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Classify Dates as Weekday or Weekend — weekend","text":"","code":"weekend(input_date)"},{"path":"https://bemts-hhs.github.io/traumar/reference/weekend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classify Dates as Weekday or Weekend — weekend","text":"input_date vector Date POSIXct objects classify.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/weekend.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Classify Dates as Weekday or Weekend — weekend","text":"character vector classification date: either \"Weekday\" \"Weekend\".","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/weekend.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Classify Dates as Weekday or Weekend — weekend","text":"function checks input_date valid Date POSIXct object. returns \"Weekday\" dates fall Monday Friday \"Weekend\" dates fall Saturday Sunday. input correct class, function throw error.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/weekend.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Classify Dates as Weekday or Weekend — weekend","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/weekend.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Classify Dates as Weekday or Weekend — weekend","text":"","code":"# Example 1: Date of a weekend weekend(as.Date(\"2025-01-18\")) #> [1] \"Weekend\"  # Example 2: Date of a weekday weekend(as.Date(\"2025-01-15\")) #> [1] \"Weekday\"  # Example 3: Date of an invalid object try( weekend(\"2025-01-18\") # This will throw an error ) #> Error in weekend(\"2025-01-18\") :  #>   The input to `input_date` must be an object of class <Date> or #> <POSIXct>, but you supplied an object of class <character>.Supply a <Date> #> object to `weekend()`."},{"path":[]},{"path":"https://bemts-hhs.github.io/traumar/news/index.html","id":"traumar-100","dir":"Changelog","previous_headings":"","what":"traumar 1.0.0","title":"traumar 1.0.0","text":"CRAN release: 2025-02-21","code":""},{"path":"https://bemts-hhs.github.io/traumar/news/index.html","id":"traumar-100-1","dir":"Changelog","previous_headings":"","what":"traumar 1.0.0","title":"traumar 1.0.0","text":"CRAN release: 2025-02-21 Release CRAN. Completed complete test coverage > 90%.","code":""},{"path":"https://bemts-hhs.github.io/traumar/news/index.html","id":"traumar-0019000","dir":"Changelog","previous_headings":"","what":"traumar 0.0.1.9000","title":"traumar 0.0.1.9000","text":"Add probability_of_survival() function. rmm() rm_bin_summary() nonlinear_bins() Updated existing tests, created new tests. Started test coverage process.","code":""},{"path":"https://bemts-hhs.github.io/traumar/news/index.html","id":"traumar-001","dir":"Changelog","previous_headings":"","what":"traumar 0.0.1","title":"traumar 0.0.1","text":"Add trauma_case_mix() function. Add trauma_performance() function. Add rmm() function. Add rm_bin_summary() function. Add non_linear_bins() function. Add impute() function. Add normalize() function. Add season() function. Add weekend() function. Add pretty_number() function. Add pretty_percent() function. Add small_count_label() function. Add stat_sig() function. Add theme_cleaner() function. Add %not_in% function. Package initialization","code":""}]
