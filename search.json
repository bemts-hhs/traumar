[{"path":"https://bemts-hhs.github.io/traumar/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 traumar authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://bemts-hhs.github.io/traumar/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nicolas Foss. Author, maintainer.","code":""},{"path":"https://bemts-hhs.github.io/traumar/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Foss N (2025). traumar: Calculate Metrics Relevant Trauma System Performance. R package version 0.0.1, https://bemts-hhs.github.io/traumar/.","code":"@Manual{,   title = {traumar: Calculate Metrics Relevant to Trauma System Performance},   author = {Nicolas Foss},   year = {2025},   note = {R package version 0.0.1},   url = {https://bemts-hhs.github.io/traumar/}, }"},{"path":"https://bemts-hhs.github.io/traumar/index.html","id":"traumar-","dir":"","previous_headings":"","what":"Calculate Metrics Relevant to Trauma System Performance","title":"Calculate Metrics Relevant to Trauma System Performance","text":"Continuous Quality Improvement (CQI) Process Improvement (PI) essential pillars healthcare, particularly care injured patients. However, hospitals, trauma systems, trauma program managers (TPMs) often lack access standardized quality measures derived academic literature. {traumar} package addresses gap providing tools calculate quality measures related relative mortality efficiently accurately. automating calculations, {traumar} empowers hospital systems, trauma networks, TPMs focus efforts analyzing outcomes driving meaningful improvements patient care. Whether ’re seeking enhance PI initiatives streamline CQI processes, {traumar} serves valuable resource advancing trauma care quality.","code":""},{"path":"https://bemts-hhs.github.io/traumar/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Calculate Metrics Relevant to Trauma System Performance","text":"can install development version traumar GitHub :","code":"# install.packages(\"pak\") pak::pak(\"bemts-hhs/traumar\")"},{"path":"https://bemts-hhs.github.io/traumar/index.html","id":"there-is-more","dir":"","previous_headings":"","what":"There is More!","title":"Calculate Metrics Relevant to Trauma System Performance","text":"{traumar} many functions help data analysis journey! Check additional package documentation bemts-hhs/github.io/trauma can find examples function package offer.","code":""},{"path":"https://bemts-hhs.github.io/traumar/index.html","id":"calculating-the-w-score","dir":"","previous_headings":"","what":"Calculating the W-Score","title":"Calculate Metrics Relevant to Trauma System Performance","text":"W-Score tells us many survivals (deaths) average every 100 cases seen trauma center. Using R, can {traumar} package.","code":""},{"path":"https://bemts-hhs.github.io/traumar/index.html","id":"first-we-will-create-the-data-for-these-examples","dir":"","previous_headings":"Calculating the W-Score","what":"First, we will create the data for these examples","title":"Calculate Metrics Relevant to Trauma System Performance","text":"","code":"# Generate example data with high negative skewness set.seed(123)  # Parameters n_patients <- 10000  # Total number of patients  # Generate survival probabilities (Ps) using a logistic distribution Ps <- plogis(rnorm(n_patients, mean = 2, sd = 1.5))  # Skewed towards higher values  # Simulate survival outcomes based on Ps survival_outcomes <- rbinom(n_patients, size = 1, prob = Ps)  # Create data frame data <- data.frame(Ps = Ps, survival = survival_outcomes) |> dplyr::mutate(death = dplyr::if_else(survival == 1, 0, 1))"},{"path":"https://bemts-hhs.github.io/traumar/index.html","id":"the-w-score","dir":"","previous_headings":"Calculating the W-Score","what":"The W-Score!","title":"Calculate Metrics Relevant to Trauma System Performance","text":"","code":"# Calculate trauma performance (W, M, Z scores) trauma_performance(data, Ps_col = Ps, outcome_col = death) #> # A tibble: 10 × 2 #>    Calculation_Name        Value #>    <chr>                   <dbl> #>  1 N_Patients          10000     #>  2 N_Survivors          8137     #>  3 N_Deaths             1863     #>  4 Predicted_Survivors  8097.    #>  5 Predicted_Deaths     1903.    #>  6 SE_Predictions         34.2   #>  7 Patient_Estimate       40.3   #>  8 W_Score                 0.403 #>  9 M_Score                 0.374 #> 10 Z_Score                 1.18"},{"path":"https://bemts-hhs.github.io/traumar/index.html","id":"comparing-the-probability-of-survival-distribution-of-your-patient-mix-to-the-major-trauma-outcomes-study","dir":"","previous_headings":"","what":"Comparing the Probability of Survival Distribution of your Patient Mix to the Major Trauma Outcomes Study","title":"Calculate Metrics Relevant to Trauma System Performance","text":"M Z scores calculated using methods defined literature may meaningful distribution probability survival measure similar enough Major Trauma Outcomes Study distribution. {traumar} provides way check data analysis script, even console. trauma_performance() function hood , can get read much confidence can put Z score.","code":"# Compare the current case mix with the MTOS case mix trauma_case_mix(data, Ps_col = Ps, outcome_col = death) #>      Ps_range current_fraction MTOS_distribution #> 1 0.00 - 0.25           0.0209             0.010 #> 2 0.26 - 0.50           0.0742             0.043 #> 3 0.51 - 0.75           0.1907             0.000 #> 4 0.76 - 0.90           0.3000             0.052 #> 5 0.91 - 0.95           0.1979             0.053 #> 6 0.96 - 1.00           0.2163             0.842"},{"path":"https://bemts-hhs.github.io/traumar/index.html","id":"the-relative-mortality-metric","dir":"","previous_headings":"","what":"The Relative Mortality Metric","title":"Calculate Metrics Relevant to Trauma System Performance","text":"Napoli et al. (2017) published methods calculating measure trauma center (system) performance overcoming problem W-Score TRISS methodology. Given majority patients seen trauma centers probability survival 90%, estimating performance based W-Score may indicate well center performed lower acuity patients. Using Napoli et al. (2017), possible calculate score similar W-Score interpretability, deals negatively skewed probability survival problem creating non-linear bins score ranges, weighting score based nature bins. Relative Mortality Metric (RMM) scale -1 1, RMM 0 indicates observed mortality aligns expected national benchmark across acuity levels. RMM greater 0 indicates better--expected performance, center outperforming national benchmark. RMM less 0 indicates -performance, center’s observed mortality higher expected benchmark.","code":""},{"path":"https://bemts-hhs.github.io/traumar/index.html","id":"non-linear-binning-algorithm","dir":"","previous_headings":"","what":"Non-Linear Binning Algorithm","title":"Calculate Metrics Relevant to Trauma System Performance","text":"important part approach Napoli et al. (2017) took modify M-Score approach looking linear bins probability survival distribution, make non-linear. {traumar} package using Dr. Napoli’s method:","code":"# Apply the nonlinear_bins function results <- nonlinear_bins(data = data,                          Ps_col = Ps,                          divisor1 = 5,                          divisor2 = 5,                          threshold_1 = 0.9,                          threshold_2 = 0.99)  # View intervals created by the algorithm results$intervals #>  [1] 0.02257717 0.54234698 0.70154257 0.79581165 0.85714527 0.90005763 #>  [7] 0.92518915 0.94603830 0.96266743 0.97623957 0.99957866  # View the bin statistics results$bin_stats #> # A tibble: 10 × 7 #>    bin_number bin_start bin_end  mean      sd count percent #>         <int>     <dbl>   <dbl> <dbl>   <dbl> <dbl>   <dbl> #>  1          1    0.0226   0.542 0.378 0.122    1111   0.111 #>  2          2    0.542    0.702 0.628 0.0458   1111   0.111 #>  3          3    0.702    0.796 0.752 0.0271   1111   0.111 #>  4          4    0.796    0.857 0.829 0.0173   1111   0.111 #>  5          5    0.857    0.900 0.879 0.0126   1110   0.111 #>  6          6    0.900    0.925 0.913 0.00723   805   0.08  #>  7          7    0.925    0.946 0.936 0.00596   805   0.08  #>  8          8    0.946    0.963 0.954 0.00473   805   0.08  #>  9          9    0.963    0.976 0.970 0.00406   805   0.08  #> 10         10    0.976    1.00  0.987 0.00621  1226   0.123"},{"path":"https://bemts-hhs.github.io/traumar/index.html","id":"the-rmm-function","dir":"","previous_headings":"","what":"The RMM function","title":"Calculate Metrics Relevant to Trauma System Performance","text":"RMM helpful sensitive higher acuity patients well, trauma center struggling effectively intervene higher acuity patients, reflected RMM. Conversely, W-Score, trauma center performance may appear decline due influence lower acuity patients using MTOS Distribution. {traumar} automates calculation RMM single score, non-linear binning process recommended Napoli et al. (2017). rmm() rm_bin_summary() functions call nonlinear_bins() hood produce statistics see example:","code":"# Example usage of the `rmm()` function rmm(data = data,     Ps_col = Ps,     outcome_col = survival) #> ✔ Data validation passed. #>    numerator denominator        E_b     RMM_LL       RMM    RMM_UL #> 1 0.06649169   0.4776776 0.07660905 0.06258879 0.1391978 0.2158069  # Pivoting can be helpful at times rmm(   data = data,   Ps_col = Ps,   outcome_col = survival,   pivot = TRUE ) #> ✔ Data validation passed. #> # A tibble: 6 × 2 #>   coefficient  value #>   <chr>        <dbl> #> 1 numerator   0.0665 #> 2 denominator 0.478  #> 3 E_b         0.0766 #> 4 RMM_LL      0.0626 #> 5 RMM         0.139  #> 6 RMM_UL      0.216  # RMM calculated by non-linear bin range # `rm_bin_summary()` function rm_bin_summary(data = data,                Ps_col = Ps,                outcome_col = survival) #> ✔ Data validation passed. #>    bin_number TA_b TD_b  N_b       EM_b  bin_start   bin_end  midpoint #> 1           1  454  657 1111 0.59135914 0.02257717 0.5423470 0.2824621 #> 2           2  686  425 1111 0.38253825 0.54234698 0.7015426 0.6219448 #> 3           3  850  261 1111 0.23492349 0.70154257 0.7958116 0.7486771 #> 4           4  922  189 1111 0.17011701 0.79581165 0.8571453 0.8264785 #> 5           5  971  139 1110 0.12522523 0.85714527 0.9000576 0.8786014 #> 6           6  727   78  805 0.09689441 0.90005763 0.9251891 0.9126234 #> 7           7  752   53  805 0.06583851 0.92518915 0.9460383 0.9356137 #> 8           8  779   26  805 0.03229814 0.94603830 0.9626674 0.9543529 #> 9           9  783   22  805 0.02732919 0.96266743 0.9762396 0.9694535 #> 10         10 1213   13 1226 0.01060359 0.97623957 0.9995787 0.9879091 #>           R_b    AntiM_b         E_b     numerator  denominator       RMM_LL #> 1  0.51976981 0.71753793 0.026472901  6.558393e-02 0.3729545526  0.149376746 #> 2  0.15919559 0.37805523 0.028513634 -7.136780e-04 0.0601847250 -0.040371760 #> 3  0.09426908 0.25132289 0.025507174  1.545956e-03 0.0236919780  0.039745137 #> 4  0.06133362 0.17352154 0.022268528  2.088121e-04 0.0106427043 -0.002648313 #> 5  0.04291236 0.12139855 0.019213093 -1.642116e-04 0.0052094984 -0.050734668 #> 6  0.02513152 0.08737661 0.019507496 -2.391967e-04 0.0021959070 -0.128435935 #> 7  0.02084916 0.06438627 0.016955206 -3.027788e-05 0.0013423995 -0.039510248 #> 8  0.01662913 0.04564713 0.014418476  2.219822e-04 0.0007590721  0.278020373 #> 9  0.01357214 0.03054650 0.011887823  4.366569e-05 0.0004145813  0.093436964 #> 10 0.02333909 0.01209088 0.006117843  3.471206e-05 0.0002821901  0.116891645 #>            RMM       RMM_UL #> 1   0.17584965  0.202322549 #> 2  -0.01185813  0.016655509 #> 3   0.06525231  0.090759485 #> 4   0.01962021  0.041888743 #> 5  -0.03152157 -0.012308481 #> 6  -0.10892844 -0.089420943 #> 7  -0.02255504 -0.005599836 #> 8   0.29243885  0.306857325 #> 9   0.10532479  0.117212609 #> 10  0.12300949  0.129127331"},{"path":"https://bemts-hhs.github.io/traumar/reference/grapes-not_in-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if Elements Are Not in a Vector — %not_in%","title":"Check if Elements Are Not in a Vector — %not_in%","text":"function returns logical vector indicating whether   element `x` `y`.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/grapes-not_in-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if Elements Are Not in a Vector — %not_in%","text":"","code":"x %not_in% y"},{"path":"https://bemts-hhs.github.io/traumar/reference/grapes-not_in-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if Elements Are Not in a Vector — %not_in%","text":"x vector values checked. y vector values check .","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/grapes-not_in-grapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if Elements Are Not in a Vector — %not_in%","text":"logical vector length `x`, `TRUE` indicates   corresponding element `x` found `y`, `FALSE` indicates   found `y`.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/grapes-not_in-grapes.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check if Elements Are Not in a Vector — %not_in%","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/grapes-not_in-grapes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if Elements Are Not in a Vector — %not_in%","text":"","code":"# Example vectors x <- c(\"apple\", \"banana\", \"cherry\") y <- c(\"banana\", \"grape\")  # Check which elements in `x` are not in `y` x %not_in% y #> [1]  TRUE FALSE  TRUE  # Example with numeric values a <- c(1, 2, 3, 4, 5) b <- c(2, 4, 6)  a %not_in% b #> [1]  TRUE FALSE  TRUE FALSE  TRUE"},{"path":"https://bemts-hhs.github.io/traumar/reference/impute.html","id":null,"dir":"Reference","previous_headings":"","what":"Impute Numeric Column Values — impute","title":"Impute Numeric Column Values — impute","text":"Cleans numeric columns handling extreme values imputing   missing values. function supports two main focuses: handling skewed   distributions imputing missing data.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/impute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Impute Numeric Column Values — impute","text":"","code":"impute(   x,   focus = c(\"skew\", \"missing\"),   method = c(\"winsorize\", \"iqr\", \"mean\", \"median\"),   percentile = NULL )"},{"path":"https://bemts-hhs.github.io/traumar/reference/impute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Impute Numeric Column Values — impute","text":"x numeric vector cleaned. focus character string indicating focus. Options : - `\"skew\"`: Handle extreme values using percentile IQR methods (default). - `\"missing\"`: Impute missing values. method character string specifying method: - `focus = \"skew\"`:   - `\"winsorize\"`: Replace values outside specified percentiles (default).   - `\"iqr\"`: Use IQR limit extreme values. - `focus = \"missing\"`:   - `\"mean\"`: Replace missing values mean.   - `\"median\"`: Replace missing values median. percentile numeric value (percentile > 0) winsorization. provided, defaults 0.01 0.99.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/impute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Impute Numeric Column Values — impute","text":"numeric vector cleaned imputed values.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/impute.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Impute Numeric Column Values — impute","text":"","code":"x <- c(1, 2, 3, 100, 200, NA) # Winsorize to 1% and 99% impute(x, focus = \"skew\", method = \"winsorize\") #> [1]   1.04   2.00   3.00 100.00 196.00     NA  # Replace missing values with the mean impute(x, focus = \"missing\", method = \"mean\") #> [1]   1.0   2.0   3.0 100.0 200.0  61.2"},{"path":"https://bemts-hhs.github.io/traumar/reference/nonlinear_bins.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Nonlinear Probability of Survival Bins — nonlinear_bins","title":"Create Nonlinear Probability of Survival Bins — nonlinear_bins","text":"function generates nonlinear bins probability survival data based specified thresholds divisors. calculates bin statistics, including mean, standard deviation, count, percentage bin.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/nonlinear_bins.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Nonlinear Probability of Survival Bins — nonlinear_bins","text":"","code":"nonlinear_bins(   data,   Ps_col,   divisor1 = 5,   divisor2 = 5,   threshold_1 = 0.9,   threshold_2 = 0.99 )"},{"path":"https://bemts-hhs.github.io/traumar/reference/nonlinear_bins.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Nonlinear Probability of Survival Bins — nonlinear_bins","text":"data `data.frame` `tibble` containing probability survival data set patients. Ps_col column `data` containing probability survival values set patients. divisor1 parameter control width probability survival range bins. Affects creation step sizes beginning bin range. Defaults `5`. divisor2 parameter control width probability survival range bins. Affects creation step sizes beginning bin range. Defaults `5`. threshold_1 parameter decide data indices begin create step sizes. Defaults `0.9`. threshold_2 parameter decide data indices end create step sizes. Defaults `0.99`.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/nonlinear_bins.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Nonlinear Probability of Survival Bins — nonlinear_bins","text":"list `intervals` `bin_stats` objects: * `intervals`: vector start end-points probability survival bin ranges. * `bin_stats`: `tibble` columns `bin_number`, `bin_start`, `bin_end`, `mean`, `sd`, `count`, `percent`.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/nonlinear_bins.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create Nonlinear Probability of Survival Bins — nonlinear_bins","text":"Nicolas Foss, Ed.D, MS, original paper code MATLAB Nicholas   J. Napoli, Ph.D., MS","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/nonlinear_bins.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Nonlinear Probability of Survival Bins — nonlinear_bins","text":"","code":"# Generate example data with high negative skewness set.seed(123)  # Parameters n_patients <- 10000  # Total number of patients  # Skewed towards higher values Ps <- plogis(rnorm(n_patients, mean = 2, sd = 1.5))  # Simulate survival outcomes based on Ps survival_outcomes <- rbinom(n_patients,                             size = 1,                             prob = Ps                             )  # Create data frame data <- data.frame(Ps = Ps, survival = survival_outcomes) |> dplyr::mutate(death = dplyr::if_else(survival == 1, 0, 1))  # Apply the nonlinear_bins function results <- nonlinear_bins(data = example_data,                           Ps_col = Ps,                           divisor1 = 5,                           divisor2 = 5,                           threshold_1 = 0.9,                           threshold_2 = 0.99) #> Error: object 'example_data' not found  # View results results$intervals #> Error: object 'results' not found results$bin_stats #> Error: object 'results' not found"},{"path":"https://bemts-hhs.github.io/traumar/reference/normalize.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize a Numeric Vector — normalize","title":"Normalize a Numeric Vector — normalize","text":"function normalizes numeric integer vector using one two methods: min-max normalization (scales data range [0, 1]) z-score normalization (centers data around 0 standard deviation 1).","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/normalize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize a Numeric Vector — normalize","text":"","code":"normalize(x, method = c(\"min_max\", \"z_score\"))"},{"path":"https://bemts-hhs.github.io/traumar/reference/normalize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize a Numeric Vector — normalize","text":"x numeric integer vector normalized. method character string specifying normalization method. Options `\"min_max\"` min-max normalization `\"z_score\"` z-score normalization. method provided, default `\"min_max\"`.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/normalize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize a Numeric Vector — normalize","text":"numeric vector length `x`, containing   normalized values.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/normalize.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Normalize a Numeric Vector — normalize","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/normalize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normalize a Numeric Vector — normalize","text":"","code":"# Example data data <- c(10, 20, 30, 40, 50, NA)  # Min-max normalization normalize(data, method = \"min_max\") #> [1] 0.00 0.25 0.50 0.75 1.00   NA  # Z-score normalization normalize(data, method = \"z_score\") #> [1] -1.2649111 -0.6324555  0.0000000  0.6324555  1.2649111         NA  # Default behavior (min-max normalization) normalize(data) #> ℹ As no method was supplied, `normalize()` will default to min-max normalization methods. #> [1] 0.00 0.25 0.50 0.75 1.00   NA"},{"path":"https://bemts-hhs.github.io/traumar/reference/pretty_number.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Numbers into Readable Abbreviated Formats — pretty_number","title":"Convert Numbers into Readable Abbreviated Formats — pretty_number","text":"function converts large numeric values readable abbreviated formats (e.g., 1,000 becomes \"1k\") options rounding, decimal precision, custom prefix. supports numbers decillion range.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/pretty_number.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Numbers into Readable Abbreviated Formats — pretty_number","text":"","code":"pretty_number(x, n_decimal = 2, prefix = NULL, round = T)"},{"path":"https://bemts-hhs.github.io/traumar/reference/pretty_number.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Numbers into Readable Abbreviated Formats — pretty_number","text":"x numeric value vector converted readable format. n_decimal integer specifying number decimal places include output. Defaults `2`. prefix optional character string prepend formatted number (e.g., \"$\"). Defaults `NULL`. round logical value indicating whether round numbers formatting. Defaults `TRUE`.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/pretty_number.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Numbers into Readable Abbreviated Formats — pretty_number","text":"character vector numbers formatted abbreviated   strings. `prefix` provided, added formatted numbers.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/pretty_number.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert Numbers into Readable Abbreviated Formats — pretty_number","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/pretty_number.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Numbers into Readable Abbreviated Formats — pretty_number","text":"","code":"# Basic usage pretty_number(1234)               # \"1.23k\" #> [1] \"1.23k\" pretty_number(1234567)            # \"1.23m\" #> [1] \"1.23m\" pretty_number(1234567890)         # \"1.23b\" #> [1] \"1.23b\"  # Adjusting decimal places pretty_number(1234, n_decimal = 1) # \"1.2k\" #> [1] \"1.2k\"  # Adding a prefix pretty_number(1234, prefix = \"$\")  # \"$1.23k\" #> [1] \"$1.23k\"  # Without rounding pretty_number(1250, round = FALSE) # \"1.2k\" #> [1] \"1.25k\""},{"path":"https://bemts-hhs.github.io/traumar/reference/pretty_percent.html","id":null,"dir":"Reference","previous_headings":"","what":"Format Numeric Variables as Percentages — pretty_percent","title":"Format Numeric Variables as Percentages — pretty_percent","text":"function formats numeric variables percentages specified number decimal places. refines output removing unnecessary trailing zeros decimal point ensures percentage sign correctly applied without extraneous characters, resulting polished, human-readable percentage representation.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/pretty_percent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format Numeric Variables as Percentages — pretty_percent","text":"","code":"pretty_percent(variable, n_decimal = 0.1)"},{"path":"https://bemts-hhs.github.io/traumar/reference/pretty_percent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format Numeric Variables as Percentages — pretty_percent","text":"variable numeric vector representing proportions format percentages. n_decimal numeric value specifying number decimal places. Defaults `0.1`.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/pretty_percent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format Numeric Variables as Percentages — pretty_percent","text":"character vector containing formatted percentages.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/pretty_percent.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Format Numeric Variables as Percentages — pretty_percent","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/pretty_percent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format Numeric Variables as Percentages — pretty_percent","text":"","code":"# Example usage: pretty_percent(0.12345)  # Default decimal places #> [1] \"12%\" pretty_percent(0.12345, n_decimal = 2)  # Two decimal places #> [1] \"12.35%\" pretty_percent(c(0.1, 0.25, 0.3333), n_decimal = 1)  # Vector input #> [1] \"10%\"   \"25%\"   \"33.3%\""},{"path":"https://bemts-hhs.github.io/traumar/reference/rm_bin_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Bin-Level Summary for Relative Mortality Metric (RMM) — rm_bin_summary","title":"Bin-Level Summary for Relative Mortality Metric (RMM) — rm_bin_summary","text":"Calculates bin-level summary Relative Mortality Metric (RMM) Napoli et al. (2017) grouping data bins based survival probabilities (Ps) summarizing outcomes within bin. function returns statistics total alive, total dead, estimated mortality, anticipated mortality, confidence intervals bin.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/rm_bin_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bin-Level Summary for Relative Mortality Metric (RMM) — rm_bin_summary","text":"","code":"rm_bin_summary(   data,   Ps_col,   outcome_col,   Divisor1 = 5,   Divisor2 = 5,   Threshold_1 = 0.9,   Threshold_2 = 0.99,   Z = 1.96 )"},{"path":"https://bemts-hhs.github.io/traumar/reference/rm_bin_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bin-Level Summary for Relative Mortality Metric (RMM) — rm_bin_summary","text":"data data frame tibble containing data. Ps_col name column containing survival probabilities (Ps). numeric (values 0 100). outcome_col name column containing outcome data. binary, values indicating patient survival. value `1` `TRUE` represent \"alive\" (survived), `0` `FALSE` represent \"dead\" (survive). Ensure column contains two possible values. Divisor1 divisor used binning survival probabilities (default 5). Divisor2 second divisor used binning survival probabilities (default 5). Threshold_1 first threshold dividing survival probabilities (default 0.9). Threshold_2 second threshold dividing survival probabilities (default 0.99). Z Z value used calculating confidence intervals (default 1.96).","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/rm_bin_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bin-Level Summary for Relative Mortality Metric (RMM) — rm_bin_summary","text":"tibble containing bin-level statistics including:   - `bin_number`: bin patient assigned.   - `TA_b`: Total alive bin (number patients survived).   - `TD_b`: Total dead bin (number patients survive).   - `N_b`: Total number patients bin.   - `EM_b`: Estimated mortality rate bin (TD_b / (TA_b + TD_b)).   - `bin_start`: lower bound survival probability range bin.   - `bin_end`: upper bound survival probability range bin.   - `midpoint`: midpoint bin range (calculated (bin_start + bin_end) / 2).   - `R_b`: width bin (bin_end - bin_start).   - `AntiM_b`: anticipated mortality bin, based midpoint.   - `E_b`: error bound RMM estimate, calculated using bin size   anticipated mortality.   - `numerator`: weighted numerator RMM calculation.   - `denominator`: weighted denominator RMM calculation.   - `RMM`: Relative Mortality Metric (RMM) bin,   quantifying difference observed expected mortality.   - `RMM_UL`: upper 95   - `RMM_LL`: lower 95","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/rm_bin_summary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bin-Level Summary for Relative Mortality Metric (RMM) — rm_bin_summary","text":"Relative Mortality Metric (RMM) quantifies performance center comparison anticipated mortality based TRISS national benchmark. RMM measures difference observed expected mortality, range -1 1. - RMM 0 indicates observed mortality aligns expected national benchmark across acuity levels. - RMM greater 0 indicates better--expected performance, center outperforming national benchmark. - RMM less 0 indicates -performance, center’s observed mortality higher expected benchmark. metric helps assess center's mortality compares national standards, guiding quality improvement efforts.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/rm_bin_summary.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Bin-Level Summary for Relative Mortality Metric (RMM) — rm_bin_summary","text":"Nicolas Foss, Ed.D, MS, original paper code MATLAB Nicholas   J. Napoli, Ph.D., MS","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/rm_bin_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bin-Level Summary for Relative Mortality Metric (RMM) — rm_bin_summary","text":"","code":"# Generate example data with high negative skewness set.seed(123)  # Parameters n_patients <- 10000  # Total number of patients  Ps <- plogis(rnorm(n_patients, mean = 2,                     sd = 1.5)                     )  # Skewed towards higher values  # Simulate survival outcomes based on Ps survival_outcomes <- rbinom(n_patients,                             size = 1,                             prob = Ps                             )  # Create data frame data <- data.frame(Ps = Ps, survival = survival_outcomes) |> dplyr::mutate(death = dplyr::if_else(survival == 1, 0, 1))  # Example usage of the `rm_bin_summary` function rm_bin_summary(data = data, Ps_col = Ps,                outcome_col = survival                ) #> ✔ Data validation passed. #>    bin_number TA_b TD_b  N_b       EM_b  bin_start   bin_end  midpoint #> 1           1  454  657 1111 0.59135914 0.02257717 0.5423470 0.2824621 #> 2           2  686  425 1111 0.38253825 0.54234698 0.7015426 0.6219448 #> 3           3  850  261 1111 0.23492349 0.70154257 0.7958116 0.7486771 #> 4           4  922  189 1111 0.17011701 0.79581165 0.8571453 0.8264785 #> 5           5  971  139 1110 0.12522523 0.85714527 0.9000576 0.8786014 #> 6           6  727   78  805 0.09689441 0.90005763 0.9251891 0.9126234 #> 7           7  752   53  805 0.06583851 0.92518915 0.9460383 0.9356137 #> 8           8  779   26  805 0.03229814 0.94603830 0.9626674 0.9543529 #> 9           9  783   22  805 0.02732919 0.96266743 0.9762396 0.9694535 #> 10         10 1213   13 1226 0.01060359 0.97623957 0.9995787 0.9879091 #>           R_b    AntiM_b         E_b     numerator  denominator       RMM_LL #> 1  0.51976981 0.71753793 0.026472901  6.558393e-02 0.3729545526  0.149376746 #> 2  0.15919559 0.37805523 0.028513634 -7.136780e-04 0.0601847250 -0.040371760 #> 3  0.09426908 0.25132289 0.025507174  1.545956e-03 0.0236919780  0.039745137 #> 4  0.06133362 0.17352154 0.022268528  2.088121e-04 0.0106427043 -0.002648313 #> 5  0.04291236 0.12139855 0.019213093 -1.642116e-04 0.0052094984 -0.050734668 #> 6  0.02513152 0.08737661 0.019507496 -2.391967e-04 0.0021959070 -0.128435935 #> 7  0.02084916 0.06438627 0.016955206 -3.027788e-05 0.0013423995 -0.039510248 #> 8  0.01662913 0.04564713 0.014418476  2.219822e-04 0.0007590721  0.278020373 #> 9  0.01357214 0.03054650 0.011887823  4.366569e-05 0.0004145813  0.093436964 #> 10 0.02333909 0.01209088 0.006117843  3.471206e-05 0.0002821901  0.116891645 #>            RMM       RMM_UL #> 1   0.17584965  0.202322549 #> 2  -0.01185813  0.016655509 #> 3   0.06525231  0.090759485 #> 4   0.01962021  0.041888743 #> 5  -0.03152157 -0.012308481 #> 6  -0.10892844 -0.089420943 #> 7  -0.02255504 -0.005599836 #> 8   0.29243885  0.306857325 #> 9   0.10532479  0.117212609 #> 10  0.12300949  0.129127331"},{"path":"https://bemts-hhs.github.io/traumar/reference/rmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Relative Mortality Metric (RMM) Calculation — rmm","title":"Relative Mortality Metric (RMM) Calculation — rmm","text":"Calculates Relative Mortality Metric (RMM) Napoli et al. (2017) based patient survival probabilities (Ps) actual outcomes. function groups patients bins based survival probability scores (Ps) computes weighted mortality metric along confidence intervals. Relative Mortality Metric (RMM) quantifies performance center comparison anticipated mortality based TRISS national benchmark. RMM measures difference observed expected mortality, range -1 1. - RMM 0 indicates observed mortality aligns expected national benchmark across acuity levels. - RMM greater 0 indicates better--expected performance, center outperforming national benchmark. - RMM less 0 indicates -performance, center’s observed mortality higher expected benchmark. metric helps assess center's mortality compares national standards, guiding quality improvement efforts.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/rmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Relative Mortality Metric (RMM) Calculation — rmm","text":"","code":"rmm(   data,   Ps_col,   outcome_col,   Divisor1 = 5,   Divisor2 = 5,   Threshold_1 = 0.9,   Threshold_2 = 0.99,   Z = 1.96,   pivot = FALSE )"},{"path":"https://bemts-hhs.github.io/traumar/reference/rmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Relative Mortality Metric (RMM) Calculation — rmm","text":"data data frame tibble containing data. Ps_col name column containing survival probabilities (Ps). numeric (values 0 100). outcome_col name column containing outcome data. binary, values indicating patient survival. value `1` `TRUE` represent \"alive\" (survived), `0` `FALSE` represent \"dead\" (survive). Ensure column contains two possible values. Divisor1 divisor used binning survival probabilities (default 5). Divisor2 second divisor used binning survival probabilities (default 5). Threshold_1 first threshold dividing survival probabilities (default 0.9). Threshold_2 second threshold dividing survival probabilities (default 0.99). Z Z value used calculating confidence intervals (default 1.96). pivot logical indicating whether return results long format (pivot = TRUE) wide format (pivot = FALSE, default).","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/rmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Relative Mortality Metric (RMM) Calculation — rmm","text":"tibble containing Relative Mortality Metric (RMM) related   statistics:   - `numerator`: weighted numerator used   RMM calculation (difference anticipated observed mortality).   - `denominator`: weighted denominator used RMM calculation (anticipated mortality).   - `E_b`: error bound (confidence interval error) RMM.   - `RMM`: final calculated Relative Mortality Metric.   - `RMM_LL`: lower confidence limit RMM, adjusted error bound.   - `RMM_UL`: upper confidence limit RMM, adjusted error bound.   - `pivot = TRUE`, results long format two columns: `coefficient`    `value`, row corresponds one calculated statistics.   - `pivot = FALSE` (default), results returned wide format,   statistic separate column.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/rmm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Relative Mortality Metric (RMM) Calculation — rmm","text":"Nicolas Foss, Ed.D, MS, original paper code MATLAB Nicholas   J. Napoli, Ph.D., MS","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/rmm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Relative Mortality Metric (RMM) Calculation — rmm","text":"","code":"# Generate example data with high negative skewness set.seed(123)  # Parameters n_patients <- 10000  # Total number of patients  # Skewed towards higher values Ps <- plogis(rnorm(n_patients, mean = 2, sd = 1.5))  # Simulate survival outcomes based on Ps survival_outcomes <- rbinom(n_patients,                             size = 1,                             prob = Ps                             )  # Create data frame data <- data.frame(Ps = Ps, survival = survival_outcomes) |> dplyr::mutate(death = dplyr::if_else(survival == 1, 0, 1))  # Example usage of the `rmm` function rmm(data = data, Ps_col = Ps,     outcome_col = survival,     Divisor1 = 5,     Divisor2 = 5     ) #> ✔ Data validation passed. #>    numerator denominator        E_b     RMM_LL       RMM    RMM_UL #> 1 0.06649169   0.4776776 0.07660905 0.06258879 0.1391978 0.2158069  # pivot! rmm(data = data, Ps_col = Ps,     outcome_col = survival,     Divisor1 = 5,     Divisor2 = 5,     pivot = TRUE     ) #> ✔ Data validation passed. #> # A tibble: 6 × 2 #>   coefficient  value #>   <chr>        <dbl> #> 1 numerator   0.0665 #> 2 denominator 0.478  #> 3 E_b         0.0766 #> 4 RMM_LL      0.0626 #> 5 RMM         0.139  #> 6 RMM_UL      0.216"},{"path":"https://bemts-hhs.github.io/traumar/reference/season.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Season Based on a Date — season","title":"Get Season Based on a Date — season","text":"function determines season (Winter, Spring, Summer, Fall) based input date. seasons determined using month year traditional meteorological definition seasons (Winter: December, January, February; Spring: March, April, May; Summer: June, July, August; Fall: September, October, November).","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/season.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Season Based on a Date — season","text":"","code":"season(input_date)"},{"path":"https://bemts-hhs.github.io/traumar/reference/season.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Season Based on a Date — season","text":"input_date Date POSIXct object representing date determine season . input must class `Date` `POSIXct`.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/season.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Season Based on a Date — season","text":"factor indicating season corresponding input date.   factor levels :   - \"Winter\" December, January, February.   - \"Spring\" March, April, May.   - \"Summer\" June, July, August.   - \"Fall\" September, October, November.   - \"Undetermined\" input valid Date POSIXct object month missing.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/season.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get Season Based on a Date — season","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/season.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Season Based on a Date — season","text":"","code":"# Example usage of the season function season(as.Date(\"2025-01-15\")) #> [1] Winter #> Levels: Winter season(as.POSIXct(\"2025-07-01 12:00:00\")) #> [1] Summer #> Levels: Summer"},{"path":"https://bemts-hhs.github.io/traumar/reference/small_count_label.html","id":null,"dir":"Reference","previous_headings":"","what":"Label Small Counts Based on a Cutoff — small_count_label","title":"Label Small Counts Based on a Cutoff — small_count_label","text":"function labels values vector replacement string smaller specified cutoff. input can numeric, function return either modified version input vector small values replaced given label, keep original values otherwise.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/small_count_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Label Small Counts Based on a Cutoff — small_count_label","text":"","code":"small_count_label(var, cutoff, replacement)"},{"path":"https://bemts-hhs.github.io/traumar/reference/small_count_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Label Small Counts Based on a Cutoff — small_count_label","text":"var numeric vector. represents variable checked cutoff. cutoff numeric value representing threshold. Values `var` smaller value replaced. replacement string numeric value. value `var` smaller `cutoff`, value replace . string provided, replace numeric values string. numeric value provided, replacement also numeric.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/small_count_label.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Label Small Counts Based on a Cutoff — small_count_label","text":"vector values `var`. Values smaller `cutoff`   replaced `replacement`. `replacement` string,   return type character, otherwise, remain numeric.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/small_count_label.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Label Small Counts Based on a Cutoff — small_count_label","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/small_count_label.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Label Small Counts Based on a Cutoff — small_count_label","text":"","code":"# Example usage of the small_count_label function small_count_label(c(1, 5, 10), 5, \"Below Cutoff\") #> [1] \"Below Cutoff\" \"5\"            \"10\"           small_count_label(c(1, 5, 10), 5, 0) #> [1]  0  5 10"},{"path":"https://bemts-hhs.github.io/traumar/reference/stat_sig.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign Significance Codes Based on P-Values — stat_sig","title":"Assign Significance Codes Based on P-Values — stat_sig","text":"function assigns significance codes p-value column data frame based commonly accepted significance thresholds. also provides option display message p-value interpretation requested.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/stat_sig.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign Significance Codes Based on P-Values — stat_sig","text":"","code":"stat_sig(data, p_val_col)"},{"path":"https://bemts-hhs.github.io/traumar/reference/stat_sig.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign Significance Codes Based on P-Values — stat_sig","text":"data data frame containing p-value column assessed significance. p_val_col numeric column name (unquoted variable name) representing p-values categorized. column numeric contain p-values 0 1.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/stat_sig.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assign Significance Codes Based on P-Values — stat_sig","text":"data frame additional column `significance_value`   containing assigned significance codes p-value.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/stat_sig.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Assign Significance Codes Based on P-Values — stat_sig","text":"significance codes assigned follows: - `\"***\"` p-values ≤ 0.001 - `\"**\"` p-values ≤ 0.01 > 0.001 - `\"*\"` p-values ≤ 0.05 > 0.01 - `\".\"` p-values ≤ 0.1 > 0.05 - `\"<>\"` p-values > 0.1 Additionally, message explaining significance p-values interpretation can displayed `p_message` argument set `TRUE`.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/stat_sig.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assign Significance Codes Based on P-Values — stat_sig","text":"","code":"# Example usage of the stat_sig function data <- data.frame(p_value = c(0.001, 0.03, 0.12, 0.05, 0.07)) stat_sig(data, p_val_col = p_value) #>   p_value significance_value #> 1   0.001                *** #> 2   0.030                  * #> 3   0.120                 <> #> 4   0.050                  * #> 5   0.070                  ."},{"path":"https://bemts-hhs.github.io/traumar/reference/theme_cleaner.html","id":null,"dir":"Reference","previous_headings":"","what":"Customizable Minimalistic ggplot2 Theme — theme_cleaner","title":"Customizable Minimalistic ggplot2 Theme — theme_cleaner","text":"flexible customizable theme function creating polished minimalistic plots using `ggplot2`. `theme_cleaner` function provides various options control appearance plot elements, including font styles, sizes, colors, axis lines, grid lines, legend, title, subtitle, captions, facet appearance. theme highly customizable, allowing creation visually appealing clean plots.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/theme_cleaner.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Customizable Minimalistic ggplot2 Theme — theme_cleaner","text":"","code":"theme_cleaner(   base_size = 12,   base_family = \"sans\",   base_color = \"#70C8B8\",   base_color_title = \"#03617A\",   title_text_size = ceiling(base_size * 1.1),   subtitle_text_size = ceiling(base_size * 1.05),   caption_color = \"#19405B\",   legend_position = \"top\",   vjust_title = 0,   vjust_subtitle = 0,   hjust_title = 0,   hjust_subtitle = 0,   axis_lines = FALSE,   facets = FALSE,   facet_text_size = base_size,   draw_panel_border = FALSE,   ... )"},{"path":"https://bemts-hhs.github.io/traumar/reference/theme_cleaner.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Customizable Minimalistic ggplot2 Theme — theme_cleaner","text":"base_size Numeric. Default font size plot elements. Defaults `12`. base_family Character. Font family used text plot. Defaults `\"Work Sans\"`. base_color Character. Hex color code primary plot elements (e.g., axis text, legend text). Defaults `\"#70C8B8\"`. base_color_title Character. Hex color code plot title legend title text. Defaults `\"#03617A\"`. title_text_size Numeric. Font size plot title text. Defaults `base_size * 1.1`. subtitle_text_size Numeric. Font size plot subtitle text. Defaults `base_size * 1.05`. caption_color Character. Hex color code plot caption text. Defaults `\"#19405B\"`. legend_position Character. Legend position plot. Accepts \"top\", \"bottom\", \"left\", \"right\". Defaults `\"top\"`. vjust_title Numeric. Vertical justification plot title. Defaults `0`. vjust_subtitle Numeric. Vertical justification plot subtitle. Defaults `0`. hjust_title Numeric. Horizontal justification plot title. Defaults `0`. hjust_subtitle Numeric. Horizontal justification plot subtitle. Defaults `0`. axis_lines Logical. `TRUE`, axis lines drawn `base_color`; otherwise, hidden. Defaults `FALSE`. facets Logical. `TRUE`, additional formatting facet plots applied. Defaults `FALSE`. facet_text_size Numeric. `facets = TRUE`, size formatting facet text (`strip.text`) applied. Defaults `base_size`. draw_panel_border Logical. `TRUE`, border drawn around panels facet plots. Defaults `FALSE`. ... Additional arguments passed `ggplot2::theme` customization.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/theme_cleaner.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Customizable Minimalistic ggplot2 Theme — theme_cleaner","text":"`ggplot2` theme object can applied plots.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/theme_cleaner.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Customizable Minimalistic ggplot2 Theme — theme_cleaner","text":"function customizes common plot elements like axis text, titles, subtitles, captions, legend, facet labels. designed work `ggplot2` plots, providing clean professional look minimal styling. can adjust various aesthetic features font size, color, legend position maximum control appearance.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/theme_cleaner.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Customizable Minimalistic ggplot2 Theme — theme_cleaner","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/theme_cleaner.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Customizable Minimalistic ggplot2 Theme — theme_cleaner","text":"","code":"# Create a ggplot2 plot with the theme_cleaner theme library(ggplot2) ggplot(mtcars, aes(x = mpg, y = wt)) +   geom_point() +   theme_cleaner(base_size = 14, title_text_size = 16, legend_position = \"bottom\")   # Customize facet plots with theme_cleaner ggplot(mtcars, aes(x = mpg, y = wt)) +   geom_point() +   facet_wrap(~cyl) +   theme_cleaner(facets = TRUE, facet_text_size = 12, draw_panel_border = TRUE)"},{"path":"https://bemts-hhs.github.io/traumar/reference/trauma_case_mix.html","id":null,"dir":"Reference","previous_headings":"","what":"View the Current Patient Population Case Mix Compared to the Major Trauma Study Case Mix — trauma_case_mix","title":"View the Current Patient Population Case Mix Compared to the Major Trauma Study Case Mix — trauma_case_mix","text":"function compares current patient population's case mix (based probability survival, Ps) MTOS case mix binning patients specific Ps ranges. returns fraction patients range compares MTOS distribution.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/trauma_case_mix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"View the Current Patient Population Case Mix Compared to the Major Trauma Study Case Mix — trauma_case_mix","text":"","code":"trauma_case_mix(df, Ps_col, outcome_col)"},{"path":"https://bemts-hhs.github.io/traumar/reference/trauma_case_mix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"View the Current Patient Population Case Mix Compared to the Major Trauma Study Case Mix — trauma_case_mix","text":"df data frame containing patient data. Ps_col name column containing probability survival (Ps) values. outcome_col name column containing binary outcome data (valid values 1 TRUE alive, 0 FALSE dead).","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/trauma_case_mix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"View the Current Patient Population Case Mix Compared to the Major Trauma Study Case Mix — trauma_case_mix","text":"data frame containing Ps ranges, fraction patients   range current population, MTOS distribution   range.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/trauma_case_mix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"View the Current Patient Population Case Mix Compared to the Major Trauma Study Case Mix — trauma_case_mix","text":"function checks whether `outcome_col` contains exactly two unique values representing binary outcome. also ensures `Ps_col` contains numeric values within range 0 100. values exceed 1, converted decimal format. patients grouped predefined Ps ranges, function compares fraction patients range MTOS case mix distribution.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/trauma_case_mix.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"View the Current Patient Population Case Mix Compared to the Major Trauma Study Case Mix — trauma_case_mix","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/trauma_case_mix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"View the Current Patient Population Case Mix Compared to the Major Trauma Study Case Mix — trauma_case_mix","text":"","code":"# Generate example data with high negative skewness set.seed(123)  # Parameters n_patients <- 10000  # Total number of patients  # Generate survival probabilities (Ps) using a logistic distribution set.seed(123)  # For reproducibility Ps <- plogis(rnorm(n_patients, mean = 2, sd = 1.5))  # Skewed towards higher values  # Simulate survival outcomes based on Ps survival_outcomes <- rbinom(n_patients, size = 1, prob = Ps)  # Create data frame data <- data.frame(Ps = Ps, survival = survival_outcomes) |> dplyr::mutate(death = dplyr::if_else(survival == 1, 0, 1))  # Compare the current case mix with the MTOS case mix trauma_case_mix(data, Ps_col = Ps, outcome_col = death) #>      Ps_range current_fraction MTOS_distribution #> 1 0.00 - 0.25           0.0209             0.010 #> 2 0.26 - 0.50           0.0742             0.043 #> 3 0.51 - 0.75           0.1907             0.000 #> 4 0.76 - 0.90           0.3000             0.052 #> 5 0.91 - 0.95           0.1979             0.053 #> 6 0.96 - 1.00           0.2163             0.842"},{"path":"https://bemts-hhs.github.io/traumar/reference/trauma_performance.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Trauma Hospital Performance Based on Robust and Validated Measures — trauma_performance","title":"Calculate Trauma Hospital Performance Based on Robust and Validated Measures — trauma_performance","text":"function calculates trauma hospital performance based M, W, Z scores, derived survival probability mortality data, using established methods (Flora, 1978; Boyd et al., 1987). computes W-score, M-score, Z-score based provided dataset calculates performance metrics trauma programs.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/trauma_performance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Trauma Hospital Performance Based on Robust and Validated Measures — trauma_performance","text":"","code":"trauma_performance(   df,   Ps_col,   outcome_col,   outcome = 1,   z_method = c(\"survival\", \"mortality\"),   diagnostics = FALSE )"},{"path":"https://bemts-hhs.github.io/traumar/reference/trauma_performance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Trauma Hospital Performance Based on Robust and Validated Measures — trauma_performance","text":"df data frame containing patient data. Ps_col name column containing probability survival (Ps). values numeric 0 1. Values greater 1 automatically converted decimal format dividing 100. outcome_col name column containing binary outcome data. column contain binary values indicating patient outcome.   Valid values include 1 (dead) 0 (alive), TRUE (dead) FALSE   (alive), similar binary representations (e.g., \"Yes\" dead   \"\" alive). function check two unique values   column expects represent outcome binary form. outcome value representing mortality (default 1). Can also set 0 TRUE/FALSE, depending outcome encoded `outcome_col`. z_method character vector indicating method use calculating Z-score. Must one \"survival\" \"mortality\". default \"survival\". diagnostics logical flag (default FALSE). TRUE, diagnostic information W, M, Z scores printed console.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/trauma_performance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Trauma Hospital Performance Based on Robust and Validated Measures — trauma_performance","text":"tibble containing calculated scores (W-score, M-score, Z-score)   associated performance information. `diagnostics` TRUE,   additional diagnostic information printed.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/trauma_performance.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate Trauma Hospital Performance Based on Robust and Validated Measures — trauma_performance","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/trauma_performance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Trauma Hospital Performance Based on Robust and Validated Measures — trauma_performance","text":"","code":"# Generate example data with high negative skewness set.seed(123)  # Parameters n_patients <- 10000  # Total number of patients  # Generate survival probabilities (Ps) using a logistic distribution set.seed(123)  # For reproducibility Ps <- plogis(rnorm(n_patients, mean = 2, sd = 1.5))  # Skewed towards higher values  # Simulate survival outcomes based on Ps survival_outcomes <- rbinom(n_patients, size = 1, prob = Ps)  # Create data frame data <- data.frame(Ps = Ps, survival = survival_outcomes) |> dplyr::mutate(death = dplyr::if_else(survival == 1, 0, 1))  # Calculate trauma performance (W, M, Z scores) trauma_performance(data, Ps_col = Ps, outcome_col = death) #> # A tibble: 10 × 2 #>    Calculation_Name        Value #>    <chr>                   <dbl> #>  1 N_Patients          10000     #>  2 N_Survivors          8137     #>  3 N_Deaths             1863     #>  4 Predicted_Survivors  8097.    #>  5 Predicted_Deaths     1903.    #>  6 SE_Predictions         34.2   #>  7 Patient_Estimate       40.3   #>  8 W_Score                 0.403 #>  9 M_Score                 0.374 #> 10 Z_Score                 1.18"},{"path":"https://bemts-hhs.github.io/traumar/reference/traumar-package.html","id":null,"dir":"Reference","previous_headings":"","what":"traumar: Calculate Metrics Relevant to Trauma System Performance — traumar-package","title":"traumar: Calculate Metrics Relevant to Trauma System Performance — traumar-package","text":"Hospitals, hospital systems, even trauma systems provide care injured patients may aware robust metrics can help gauge efficacy programs saving lives injured patients. R package provides robust functions driven academic literature automate calculation relevant metrics, provides helper functions data analysis journey.","code":""},{"path":[]},{"path":"https://bemts-hhs.github.io/traumar/reference/traumar-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"traumar: Calculate Metrics Relevant to Trauma System Performance — traumar-package","text":"Maintainer: Nicolas Foss nicolas.foss@hhs.iowa.gov","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/weekend.html","id":null,"dir":"Reference","previous_headings":"","what":"Classify Dates as Weekday or Weekend — weekend","title":"Classify Dates as Weekday or Weekend — weekend","text":"function classifies date vector dates either \"Weekday\" \"Weekend\". function returns \"Weekday\" Monday Friday \"Weekend\" Saturday Sunday.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/weekend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Classify Dates as Weekday or Weekend — weekend","text":"","code":"weekend(input_date)"},{"path":"https://bemts-hhs.github.io/traumar/reference/weekend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classify Dates as Weekday or Weekend — weekend","text":"input_date vector `Date` `POSIXct` objects classify.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/weekend.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Classify Dates as Weekday or Weekend — weekend","text":"character vector classification date: either   \"Weekday\" \"Weekend\".","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/weekend.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Classify Dates as Weekday or Weekend — weekend","text":"function checks `input_date` valid `Date`   `POSIXct` object. returns \"Weekday\" dates fall Monday   Friday \"Weekend\" dates fall Saturday Sunday.   input correct class, function throw error.","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/weekend.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Classify Dates as Weekday or Weekend — weekend","text":"Nicolas Foss, Ed.D., MS","code":""},{"path":"https://bemts-hhs.github.io/traumar/reference/weekend.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Classify Dates as Weekday or Weekend — weekend","text":"","code":"# Example 1: Date of a weekend weekend(as.Date(\"2025-01-18\")) #> [1] \"Weekend\"  # Example 2: Date of a weekday weekend(as.Date(\"2025-01-15\")) #> [1] \"Weekday\"  # Example 3: Date of an invalid object if (FALSE) { # \\dontrun{ weekend(\"2025-01-18\") # This will throw an error } # }"},{"path":[]},{"path":"https://bemts-hhs.github.io/traumar/news/index.html","id":"traumar-001","dir":"Changelog","previous_headings":"","what":"traumar 0.0.1","title":"traumar 0.0.1","text":"Add trauma_case_mix() function. Add trauma_performance() function. Add rmm() function. Add rm_bin_summary() function. Add non_linear_bins() function. Add impute() function. Add normalize() function. Add season() function. Add weekend() function. Add pretty_number() function. Add pretty_percent() function. Add small_count_label() function. Add stat_sig() function. Add theme_cleaner() function. Add %not_in% function. Package initialization","code":""}]
